/* App name */
"About.appName.android" = "RockWallet";

/* About screen blog label */
"About.blog" = "Blog";

/* About screen footer */
"About.footer" = "Made by the global RockWallet team.\nVersion %1$@ Build %2$@";

/* Privay Policy button label */
"About.privacy" = "Privacy Policy";

/* About screen reddit label */
"About.reddit" = "Reddit";

/* Terms of Use button label */
"About.terms" = "Terms And Conditions";

/* About screen title */
"About.title" = "About";

/* About screen twitter label */
"About.twitter" = "Twitter";

/* About screen wallet ID label */
"About.walletID" = "RockWallet Rewards ID";

/* Close modal button accessibility label */
"AccessibilityLabels.close" = "Close";

/* Support center accessibiliy label */
"AccessibilityLabels.faq" = "Support Center";

/* Account limits title in profile view */
"Account.AccountLimits" = "Account limits";

/* Account Verification screen title */
"Account.AccountVerification" = "Account Verification";

/* Account balance */
"Account.balance" = "Your balance";

/* Before confirm photo label in create account screen */
"Account.BeforeConfirm" = "Before you confirm, please:";

/* Change your email title on registration flow */
"Account.ChangeEmail" = "Change your email";

/* Country title label in select countries view */
"Account.Country" = "Country";

/* Create a RockWallet account by entering your email address label in registration flow */
"Account.CreateAccount" = "Create a RockWallet account by entering your email address.";

/* Current limit per day label in profile screen */
"Account.CurrentLimit" = "Current limit: $1,000/day";

/* Issues for processing your data label on profile screen */
"Account.DataIssues" = "Oops! We had some issues processing your data";

/* Date of birth label in create account */
"Account.DateOfBirth" = "Date of birth";

"Account.Declined" = "Declined";

/* Delete account option in menu */
"Account.DeleteAccount" = "Delete account";

/* Delisted token alert banner message */
"Account.delistedToken" = "This token has been delisted. \n\nYou may still be able to send these tokens to another platform. For more details, visit our support page.";

/* $10000 per BTC */
"Account.exchangeRate" = "%1$@ per %2$@";

/* Get full access for the RockWallet wallet label on profile screen */
"Account.FullAccess" = "Get full access to your RockWallet!";

/* ID Verification title on account screen */
"Account.IDVerification" = "ID Verification";

/* Loading Wallet Message */
"Account.loadingMessage" = "Loading Wallet";

/* Verify your account to get full access to the wallet message */
"Account.MessageVerifyAccount" = "Verify your account to get full access to your RockWallet!";

"Account.Pending" = "Pending";

/* Account Personal Information title */
"Account.PersonalInformation" = "Personal Information";

/* Promotion and offers label when registering account */
"Account.Promotion" = "I'm ok with receiving future promotion, offers and communications";

/* Proof of Identity title in add document for kyc2 */
"Account.ProofOfIdentity" = "Proof of Identity";

"Account.Resubmit" = "Resubmit";

/* Retake photo button on create account */
"Account.RetakePhoto" = "Retake photo";

"Account.SelectCountry" = "Select country";

/* Submit your photo for document id title */
"Account.SubmitPhoto" = "Submit your photo";

/* Swap and buy limit per day description label */
"Account.SwapAndBuyLimit" = "Swap limit: $10,000 USD/day\nBuy limit: $500 USD/day";

/* Upgrade your limits label in profile screen */
"Account.UpgradeLimits" = "Upgrade your limits";

"Account.UpgradeVerificationIdentity" = "You need to upgrade your verification status before you can buy or swap assets.";

/* You need to be at least 18 years old to complete Level 1 verification label in verify account */
"Account.Verification" = "You need to be at least 18 years old to complete Level 1 verification";

/* Why is the verification declined label in profile screen */
"Account.VerificationDeclined" = "Why is my verification declined?";

"Account.Verified" = "Verified";

/* Verified account message on profile screen */
"Account.VerifiedAccountMessage" = "We’ll let you know when your account is verified.";

/* Verify account text in popup */
"Account.VerifyAccountText" = "If you verify your account, you are given access to:\n・Unlimited deposits/withdrawals\n・Enhanced security\n・Full asset support\n・Buy assets with credit card\n・24/7/365 live customer support";

/* Enter and verify your email address for your account label in registration flow */
"Account.VerifyEmail" = "Enter and verify your new email address for your RockWallet account.";

"Account.VerifyIdentity" = "We need to verify your identity before you can buy or swap assets.";

/* Verify personal information text explanation */
"Account.VerifyPersonalInformation" = "We need to verify your personal information for compliance purposes. This information won’t be shared with outside sources unless required by law.";

/* Welcome title on registration screen */
"Account.Welcome" = "Welcome!";

/* Why verify my account title */
"Account.WhyVerify" = "Why should I verify my account?";

/* Write your name as it appears on your ID label in create account */
"Account.WriteYourName" = "Write your name as it appears on your ID";

/* Confirm Account Creation mesage body */
"AccountCreation.body" = "Only create a Hedera account if you intend on storing HBAR in your wallet.";

/* Change my email label */
"AccountCreation.ChangeEmail" = "Change my email";

/* Verification code sent message */
"AccountCreation.CodeSent" = "Verification code sent.";

/* Create Account button label */
"AccountCreation.create" = "Create Account";

/* Creating Account progress Label */
"AccountCreation.creating" = "Creating Account";

/* Enter the code message in create account flow */
"AccountCreation.EnterCode" = "Please enter the code we’ve sent to";

/* Creating Account progress Label */
"AccountCreation.error" = "An error occurred during account creation. Please try again later.";

/* Not Now button label. */
"AccountCreation.notNow" = "Not Now";

/* Re-send my code label */
"AccountCreation.ResendCode" = "Re-send my code";

/* Creating Account progress Label */
"AccountCreation.timeout" = "The Request timed out. Please try again later.";

/* Confirm Account Creation Title */
"AccountCreation.title" = "Confirm Account Creation";

/* Verify your email label */
"AccountCreation.VerifyEmail" = "Verify your email";

/* Why the wallet is disabled text */
"AccountCreation.WalletDisabled" = "If you enter an incorrect wallet PIN too many times, your wallet will become disabled for a certain amount of time.\nThis is to prevent someone else from trying to guess your PIN by quickly making many guesses.\nIf your wallet is disabled, wait until the time shown and you will be able to enter your PIN again.\n\nIf you continue to enter the incorrect PIN, the amount of waiting time in between attempts will increase. Eventually, the app will reset and you can start a new wallet.\n\nIf you have the recovery phrase for your wallet, you can use it to reset your PIN by clicking the “Reset PIN” button.";

/* Why is my wallet disabled title on popup */
"AccountCreation.WalletDisabledTitle" = "Why is my wallet disabled?";

/* Popup text when the account is deleted */
"AccountDelete.AccountDeletedPopup" = "Your account has been deleted.\nWe are sorry to see you go.";

/* Delete account title */
"AccountDelete.DeleteAccountTitle" = "You are about to delete your RockWallet account.";

/* Delete account explanation title */
"AccountDelete.DeleteWhatMean" = "What does this mean?";

/* Delete account explanation part one */
"AccountDelete.ExplanationOne" = "-You will no longer be able to use your email to sign in into RockWallet Wallet";

/* Delete account explanation part three */
"AccountDelete.ExplanationThree" = "-Your private keys are still yours, keep your security phrase in a safe place in case you need to restore your wallet.";

/* Delete account explanation part two */
"AccountDelete.ExplanationTwo" = "-You will no longer be able to user your KYC and registration status";

/* Recover wallet text after deleting account */
"AccountDelete.RecoverWallet" = "I understand that the only way to recover my wallet is by entering my recovery phrase";

/* Default wallet name */
"AccountHeader.defaultWalletName" = "My RockWallet";

/* Level one title on account screen */
"AccountKYCLevelOne.LevelOne" = "Level 1";

/* Account limi message on KYC1 */
"AccountKYCLevelOne.Limit" = "Account limit: $1,000/day ($10,000 lifetime)";

/* Back page of the document text instructions for KYC2 */
"AccountKYCLevelTwo.BackPageInstructions" = "Make sure you have captured the entire back page of the document";

/* Before start label */
"AccountKYCLevelTwo.BeforeStart" = "Before you start, please:";

/* Buy limits on KYC2 account */
"AccountKYCLevelTwo.BuyLimits" = "Buy limits: $500 USD/day, no lifetime limit";

/* Capture back page of the document text */
"AccountKYCLevelTwo.CaptureBackPage" = "Make sure to capture the entire back page of the document.";

/* Capture front page text label */
"AccountKYCLevelTwo.CaptureFrontPage" = "Make sure to capture the entire front page of the document.";

/* Checking for errors label on KYC2 */
"AccountKYCLevelTwo.CheckingErrors" = "Checking for errors";

"AccountKYCLevelTwo.CompleteLevelOneFirst" = "Please complete Level 1 verification first.";

/* Confirm ID label in KYC2 flow */
"AccountKYCLevelTwo.ConfirmID" = "We need to confirm your ID";

/* Document confirmation label for KYC2 */
"AccountKYCLevelTwo.DocumentConfirmation" = "Make sure document details are clearly visible and within the frame";

/* Documents review label in KYC2 */
"AccountKYCLevelTwo.DocumentsReview" = "We are reviewing your documents and will let you know when your account has been verified.";

"AccountKYCLevelTwo.DrivingLicence" = "Driver’s license";

/* Face capture instructions text on documents for KYC2 */
"AccountKYCLevelTwo.FaceCaptureInstructions" = "Make sure you have captured your entire face in the frame.";

/* Face is in the frame text for document on KYC2 */
"AccountKYCLevelTwo.FaceVisible" = "Make sure your face is in the frame and clearly visible";

/* Face is clearly visible confirmation text for documents on KYC2 */
"AccountKYCLevelTwo.FaceVisibleConfirmation" = "Make sure your face is clearly visible.";

/* Front page of the document instructions text for KYC2 */
"AccountKYCLevelTwo.FrontPageInstructions" = "Make sure you have captured the entire front page of the document";

/* KYC Level Two status */
"AccountKYCLevelTwo.InProgress" = "Your ID verification is in progress";

/* Document instructions label for KYC2 */
"AccountKYCLevelTwo.Instructions" = "Make sure you have captured the entire document";

/* Level two title in Account screen */
"AccountKYCLevelTwo.LevelTwo" = "Level 2";

/* Swap limits on KYC2 account */
"AccountKYCLevelTwo.Limits" = "Swap limits: $10,000 USD/day, no lifetime limit";

/* Make sure before photo label in KYC2 */
"AccountKYCLevelTwo.MakeSure" = "Make sure you are in a well-lit room";

"AccountKYCLevelTwo.NationalIdCard" = "National ID card";

"AccountKYCLevelTwo.Passport" = "Passport";

/* Prepare documents label in KYC2 */
"AccountKYCLevelTwo.PrepareDocument" = "Have a valid government-issued identity document (passport, national ID card or driver’s license) ready";

"AccountKYCLevelTwo.ResidencePermit" = "Residence permit";

/* Select documents  options text label in KYC2 */
"AccountKYCLevelTwo.SelectOptions" = "Select one of the following options:";

/* Sending your data label for verification on KYC2 */
"AccountKYCLevelTwo.SendingData" = "Sending your data for verification";

"AccountKYCLevelTwo.TakeIdBackPhotoContent" = "Make sure your ID is clear and readable and fits fully in the frame";

"AccountKYCLevelTwo.TakeIdBackPhotoTitle" = "Please take a photo of your ID’s back page";

"AccountKYCLevelTwo.TakeIdFrontPhotoContent" = "Make sure your ID is clear and readable and fits fully in the frame";

"AccountKYCLevelTwo.TakeIdFrontPhotoTitle" = "Please take a photo of your ID’s front page";

"AccountKYCLevelTwo.TakePhotoPassportContent" = "Make sure your passport is clear and readable and fits fully in the frame.";

"AccountKYCLevelTwo.TakePhotoPassportTitle" = "Please take a photo of your passport.";

/* Take photos label in KYC2 */
"AccountKYCLevelTwo.TakePhotos" = "Be prepared to take a selfie and photos of your ID";

"AccountKYCLevelTwo.TakeSelfieContent" = "Make sure your face is in the frame and it’s clearly visible.";

"AccountKYCLevelTwo.TakeSelfieTitle" = "Please take a selfie";

"AccountKYCLevelTwo.updateLevelOne" = "If your personal information has changed, please first update Level 1 KYC and then continue with\nLevel 2 KYC.";

/* Uploading your photos label in KYC2 flow */
"AccountKYCLevelTwo.UploadingPhoto" = "Uploading your photos";

"AccountKYCLevelTwo.VerificationPending" = "Unavailable while KYC verification is pending.";

/* Verifying label on KYC2 */
"AccountKYCLevelTwo.Verifying" = "Verifying you";

/* Account backed up with iCloud Keychain message in alert view, */
"Alert.AccountBackedUpiCloud" = "Account backed up with iCloud Keychain";

/* Account succesfully restored from Cloud backup message in alert view */
"Alert.AccountRestorediCloud" = "Account succesfully restored from Cloud backup";

/* Third party keyboard warning */
"Alert.customKeyboard.android" = "It looks like you are using a third-party keyboard, which can record what you type and steal your Recovery Phrase. Please switch to the default Android keyboard for extra protection.";

/* Error alert title */
"Alert.error" = "Error";

/* Error title when balance to low */
"Alert.ethBalance" = "Insufficient Ethereum Balance";

/* Hedera Account succesfully created header alert view */
"Alert.HederaAccount" = "Hedera Account succesfully created.";

/* Keystore error */
"Alert.keystore.generic.android" = "There is a problem with your Android OS keystore, please contact hello@rockwallet.com";

/* KeyStore error, keys are invalidated */
"Alert.keystore.invalidated.android" = "Your RockWallet encrypted data was recently invalidated because your Android lock screen was disabled.";

/* Warn user key store data has been invalidate because the user changed their security settings. The user must uninstall. */
"Alert.keystore.invalidated.uninstall.android" = "We can't proceed because your screen lock settings have been changed (e.g. password was disabled, fingerprints were changed). For security purposes, Android has permanently locked your key store. Therefore, your RockWallet app data must be wiped by uninstalling.\n\nDon’t worry, your funds are still secure! Reinstall the app and recover your wallet using your recovery phrase.";

/* Warn user key store data has been invalidate because the user changed their security settings. The user must wipe their app data. */
"Alert.keystore.invalidated.wipe.android" = "We can't proceed because your screen lock settings have been changed (e.g. password was disabled, fingerprints were changed). For security purposes, Android has permanently locked your key store. Therefore, your RockWallet app data must be wiped.\n\nDon’t worry, your funds are still secure! Recover your wallet using your recovery phrase.";

/* Keystore error title */
"Alert.keystore.title.android" = "Android Key Store Error";

/* No internet alert message */
"Alert.noInternet" = "No internet connection found. Check your connection and try again.";

"Alert.PermissionCamera" = "KYCCamera doesn't have permission to use the camera, please change privacy settings";

/* General error message */
"Alert.somethingWentWrong" = "Something went wrong. Please try again.";

/* Request timed out error message */
"Alert.timedOut" = "Request timed out. Check your connection and try again.";

"Alert.UnableCapture" = "Unable to capture media";

/* Warning alert title */
"Alert.warning" = "Warning";

/* 'the addresses were copied'' Alert title */
"Alerts.copiedAddressesHeader" = "Addresses Copied";

/* Addresses Copied Alert sub header */
"Alerts.copiedAddressesSubheader" = "All wallet addresses successfully copied.";

/* Alert Header Label (the paper key was set) */
"Alerts.paperKeySet" = "Recovery Key Set";

/* Alert Subheader label (playfully positive) */
"Alerts.paperKeySetSubheader" = "Awesome!";

/* Alert Header label (the PIN was set) */
"Alerts.pinSet" = "PIN Set";

/* Send failure alert header label (the send failed to happen) */
"Alerts.sendFailure" = "Send failed";

/* Send success alert header label (confirmation that the send happened) */
"Alerts.sendSuccess" = "Send Confirmation";

/* Send success alert subheader label (e.g. the money was sent) */
"Alerts.sendSuccessSubheader" = "Money Sent!";

/* Fingerprint was recognized by the scanner */
"Alerts.touchIdSucceeded.android" = "Fingerprint recognized";

"Alerts.walletRestored" = "Restore your wallet";

/* Error label on XRP send amount screen */
"Amount.MinXRPAmount" = "The minimum required ammount is 10 XRP.";

/* Ripple balance title */
"Amount.RippleBalance" = "XRP Balance";

/* Ripple balance popup text */
"Amount.RippleBalanceText" = "Ripple requires each wallet to have a minimum balance of 10 XRP, so the balance displayed here is always 10 XRP less than your actual balance.";

/* Tell the user where they can enable permissions to access device storage. */
"Android.allowFileSystemAccess" = "Please enable storage permissions in your device settings: \"Settings\" > \"Apps\" > \"RockWallet\" > \"Permissions\".";

/* The "home" screen is the name of the top level menu for the app. */
"Android.BCH.welcome.message" = "Any BCH in your wallet can be accessed through the home screen.";

/* Warning about using apps that can alter the screen */
"Android.screenAlteringMessage" = "We've detected an app that is incompatible with RockWallet running on your device. For security reasons, please disable any screen altering or light filtering apps to proceed.";

/* An app that alters the screen ("screen-altering app") has been detected. */
"Android.screenAlteringTitle" = "Screen Altering App Detected";

/* JSON Serialization error message */
"ApiClient.jsonError" = "JSON Serialization Error";

/* Wallet not ready error message */
"ApiClient.notReady" = "Wallet not ready";

/* API Token error message */
"ApiClient.tokenError" = "Unable to retrieve API token";

/* ATM Cash Locatios View Title */
"ATMMapView.title" = "ATM Cash Locations Map";

/* Send BCH view body. */
"BCH.body" = "Enter a destination BCH address below. All BCH in your wallet at the time of the fork (%1$@) will be sent.";

/* Confirm sending <$5.00> to <address>? */
"BCH.confirmationMessage" = "Confirm sending %1$@ to %2$@";

/* Confirmation alert title */
"BCH.confirmationTitle" = "Confirmation";

/* Generic bch erorr message */
"BCH.genericError" = "Your account does not contain any BCH, or you received BCH after the fork.";

/* Transaction ID copied message */
"BCH.hashCopiedMessage" = "Transaction ID copied";

/* No address error message */
"BCH.noAddressError" = "Please enter an address";

/* Attempted to scan unsupported qr code error message. */
"BCH.paymentProtocolError" = "Payment Protocol Requests are not supported for BCH transactions";

/* BCH successfully sent alert message */
"BCH.successMessage" = "BCH was successfully sent.";

/* Widthdraw BCH view title */
"BCH.title" = "Withdraw BCH";

/* Tx Hash button header */
"BCH.txHashHeader" = "BCH Transaction ID";

/* Approve button label */
"BitID.approve" = "Approve";

/* <sitename> is requesting authentication using your bitcoin wallet */
"BitID.authenticationRequest" = "%1$@ is requesting authentication using your bitcoin wallet";

/* Deny button label */
"BitID.deny" = "Deny";

/* BitID error alert title */
"BitID.error" = "Authentication Error";

/* BitID error alert messaage (The payment service you are trying to use isn't working. Please contact them, as you may need to try again) */
"BitID.errorMessage" = "Please check with the service. You may need to try again.";

/* BitID success alert title */
"BitID.success" = "Successfully Authenticated";

/* BitID Authentication Request alert view title */
"BitID.title" = "BitID Authentication Request";

/* As in "(tap here to) buy (bitcoin)" */
"Button.buy" = "Buy";

/* Cancel button label */
"Button.cancel" = "Cancel";

/* Close button */
"Button.close" = "Close";

/* Confirm button title */
"Button.confirm" = "Confirm";

/* Button label to open a email compose window with our support email in the to field. */
"Button.contactSupport.android" = "Contact Support";

/* prompt continue button */
"Button.continueAction" = "Continue";

/* prompt dismiss button */
"Button.dismiss" = "Dismiss";

/* Done button title */
"Button.done" = "Done";

/* Finish button title */
"Button.Finish" = "Finish";

/* Go to dashboard button */
"Button.GoToDashboard" = "Go to dashboard";

/* Button to return to the "home" screen (the home screen is the top menu). */
"Button.Home" = "Home";

/* Ignore button label */
"Button.ignore" = "Ignore";

/* Map button */
"Button.map" = "Map";

/* Maybe Later button label */
"Button.maybeLater" = "Maybe later";

/* menu button */
"Button.menu" = "Menu";

/* More information button */
"Button.moreInfo" = "More info";

/* No button */
"Button.no" = "No";

/* OK button label */
"Button.ok" = "OK";

/* Open Settings button */
"Button.openSettings" = "Open Settings";

/* Profile button title on tab bar */
"Button.Profile" = "Profile";

/* receive button */
"Button.receive" = "Receive";

"Button.remove" = "Remove";

/* Search button */
"Button.search" = "Search";

/* Button label to open Security Settings. */
"Button.securitySettings.android" = "Security Settings";

/* Click this button to sell an asset */
"Button.sell" = "Sell";

/* send button */
"Button.send" = "Send";

/* Settings button label */
"Button.settings" = "Settings";

/* Setup button label */
"Button.setup" = "Set Up";

/* Skip button title */
"Button.skip" = "Skip";

/* Settings button label */
"Button.submit" = "Submit";

/* Button label to uninstall the app. */
"Button.uninstall.android" = "Uninstall";

"Button.Verify" = "Verify";

/* Button label to wipe the user's application data. */
"Button.wipe.android" = "Wipe";

/* Yes button */
"Button.yes" = "Yes";

/* 3D Secure label on buy flow */
"Buy.3DSecure" = "3D Secure";

/* Add card title for buy cryptos */
"Buy.AddCard" = "Add card";

/* Add a debit or credit card label on add card flow */
"Buy.AddDebitCreditCard" = "Add a debit or credit card";

/* Address label in billing address view on buy flow */
"Buy.Address" = "Address";

/* Billing address label on buy flow */
"Buy.BillingAddress" = "Billing address";

/* Buy min and max limit text */
"Buy.BuyLimits" = "Currently, minimum limit for buy is $%@ USD and maximum limit is $%@ USD/day.";

"Buy.BuyLimits.android" = "Currently, minimum limit for buy is $30.00 USD and maximum limit is $500.00 USD per day.";

/* Card label on add card flow */
"Buy.Card" = "Card";

/* CVV label in add card flow */
"Buy.CardCVV" = "CVV";

/* Card fee message label in order preview screen */
"Buy.CardFee" = "This fee is charged to cover costs associated with payment processing.";

/* Card number label in add card flow */
"Buy.CardNumber" = "Card number";

"Buy.CardNumberHint" = "XXXX XXXX XXXX XXXX";

/* Card removal failed error message on delete card flow */
"Buy.CardRemovalFailed" = "Card removal failed. Please try again.";

/* Card removed message on delete card flow */
"Buy.CardRemoved" = "Card removed";

/* City label in billing address view on buy flow */
"Buy.City" = "City";

/* Please confirm your CVV label in payment view */
"Buy.ConfirmCVV" = "Please confirm your CVV";

"Buy.Country" = "Country";

"Buy.CvvHint" = "XXX";

/* Buy details title */
"Buy.Details" = "Purchase details";

/* There was an error while processing your payment title in buy failure screen */
"Buy.ErrorProcessingPayment" = "There was an error while processing your payment";

"Buy.ExpirationDate" = "Expiration date";

/* Failure transaction message on buy */
"Buy.FailureTransactionMessage" = "Please contact your card issuer/bank or try again with a different payment method.";

/* First Name label in billing address view on buy flow */
"Buy.FirstName" = "First Name";

"Buy.InvalidExpirationDate" = "Entered expiration date is not valid!";

"Buy.iWant" = "I want";

/* Last Name label in billing address view on buy flow */
"Buy.LastName" = "Last Name";

/* Month and year label in add card flow */
"Buy.MonthYear" = "MM/YY";

/* Network fee message in order preview screen */
"Buy.NetworkFeeMessage" = "Network fee prices vary depending on the blockchain in which you are receiving your assets. This is an external fee to cover mining and transaction costs.";

/* Network fees label in order preview screen */
"Buy.NetworkFees" = "Network fees";

/* Order preview title */
"Buy.OrderPreview" = "Order preview";

/* Payment failed error message on order preview screen */
"Buy.PaymentFailed" = "Payment failed";

/* Payment method label in buy select card screen */
"Buy.PaymentMethod" = "Payment method";

/* Pay with label in buy flow */
"Buy.PayWith" = "Pay with";

"Buy.ProcessingPayment" = "Processing payment";

/* Purchase success text in purchase details screen */
"Buy.PurchaseSuccessText" = "This purchase will appear as ‘RockWallet’ on your bank statement.";

/* Your assets are on the way message in purchase details screen */
"Buy.PurchaseSuccessTitle" = "Your assets are on the way!";

/* Are you sure you want to remove this card title dialog */
"Buy.RemoveCard" = "Are you sure you want to remove card ending in";

"Buy.RemoveCard.android" = "Are you sure you want to remove card ending in %@?";

/* You will no longer be able to use it to buy assets description on removing card dialog */
"Buy.RemoveCardOption" = "You will no longer be able to use it to buy assets.";

/* Remove payment method action sheet option on profile screen */
"Buy.RemovePaymentMethod" = "Remove payment method";

/* Security code (CVV) label in add card flow */
"Buy.SecurityCode" = "Security code (CVV)";

/* Explanation of security code in popup */
"Buy.SecurityCodePopup" = "Please enter the 3 digit CVV number as it appears on the back of your card";

/* Select payment method title in buy flow */
"Buy.SelectPayment" = "Select payment method";

/* Select a payment method button title in buy flow */
"Buy.SelectPaymentMethod" = "Select a payment method";

/* State/Province label in billing address view on buy flow */
"Buy.StateProvince" = "State/Province";

/* By placing this order you agree to our terms message when ordering */
"Buy.Terms" = "By placing this order you agree to our";

"Buy.Terms.android" = "By placing this order you agree to our %@";

/* Try a different payment method button title in failure buy screen */
"Buy.TryAnotherPayment" = "Try a different payment method";

"Buy.txHashHeader" = "%@ Transaction ID";

/* Your order label in buy flow */
"Buy.YourOrder" = "Your order:";

/* ZIP/Postal Code label in billing address view on buy flow */
"Buy.ZIPPostalCode" = "ZIP/Postal Code";

/* Camera plugin instruction */
"CameraPlugin.centerInstruction" = "Center your ID in the box";

/* Cash Token Action Instructions */
"CashToken.actionInstructions" = "Please send bitcoin to this address to withdraw at the ATM. Scan QR code or copy and paste to send bitcoin. Note that it may take a few minutes for the transfer to be confirmed.";

/* Cash Token Location */
"CashToken.amountBTC" = "Amount (BTC)";

/* Cash Token Amount */
"CashToken.amountUSD" = "Amount (USD)";

/* Cash Token Label */
"CashToken.awaitingFunds" = "Awaiting Funds";

/* Cash Token Label */
"CashToken.label" = "Withdrawl Status";

/* Cash Token Location */
"CashToken.location" = "Location";

/* Cash Token Please Verify */
"CashToken.pleaseVerify" = "Please Verify";

"CloudBackup.backupDeleted" = "Backup Erased";

"CloudBackup.backupDeletedMessage" = "Your iCloud backup has been erased after too many failed PIN attempts. The app will now restart.";

"CloudBackup.backupMenuTitle" = "iCloud Backup";

"CloudBackup.createButton" = "CREATE NEW WALLET";

"CloudBackup.createWarning" = "A previously backed up wallet has been detected. Using this backup is recomended. Are you sure you want to proceeed with creating a new wallet?";

"CloudBackup.enableBody1" = "iCloud Keychain must be turned on for this feature to work.";

"CloudBackup.enableBody2" = "It should look like the following:";

"CloudBackup.enableButton" = "I have turned on iCloud Keychain";

"CloudBackup.enableTitle" = "Enable Keychain";

"CloudBackup.encryptBackupMessage" = "Enter pin to encrypt backup";

"CloudBackup.mainBody" = "Please note, iCloud backup is only as secure as your iCloud account. We still recommend writing down your recovery phrase in the following step and keeping it secure. The recovery phrase is the only way to recover your wallet if you can no longer access iCloud.";

"CloudBackup.mainTitle" = "iCloud Recovery Backup";

"CloudBackup.mainWarning" = "iCloud Keychain must be turned on in the iOS Settings app for this feature to work";

"CloudBackup.mainWarningConfirmation" = "Are you sure you want to disable iCloud Backup? This will delete your backup from all devices.";

"CloudBackup.pinAttempts" = "Attempts remaining before erasing backup: %1$@";

"CloudBackup.recoverButton" = "Restore with Recovery Phrase";

"CloudBackup.recoverHeader" = "Enter PIN to unlock iCloud backup";

"CloudBackup.recoverWarning" = "A previously backed up wallet has been detected. Using this backup is recommended. Are you sure you want to proceeed with restoring from a recovery phrase?";

"CloudBackup.restoreButton" = "Restore with iCloud Backup";

"CloudBackup.selectTitle" = "Choose Backup";

"CloudBackup.step1" = "Launch the Settings app.";

"CloudBackup.step2" = "Tap your Apple ID name.";

"CloudBackup.step3" = "Tap iCloud.";

"CloudBackup.step4" = "Verify that iCloud Keychain is ON";

"CloudBackup.understandText" = "I understand that this feature will not work unless iCloud Keychain is enabled.";

"CloudBackup.warningBody" = "Your iCloud backup will be erased after %1$@ more incorrect PIN attempts.";

/* Amount to Send: ($1.00) */
"Confirmation.amountLabel" = "Amount to Send:";

"Confirmation.destinationTag" = "Destination Tag";

"Confirmation.destinationTag_EmptyHint" = "(empty)";

/* Network Fee: ($1.00) */
"Confirmation.feeLabel" = "Network Fee:";

/* Network Fee: (ETH) */
"Confirmation.feeLabelETH" = "Network Fee (ETH):";

/* Label for Hedera Memo field on transaction confirmation screen */
"Confirmation.hederaMemo" = "Hedera Memo";

/* eg. Processing time: This transaction is predicted to complete in [10-60 minutes]. */
"Confirmation.processingTime" = "Processing time: This transaction is predicted to complete in %1$@.";

/* Label for "send" button on final confirmation screen */
"Confirmation.send" = "Send";

/* Confirmation Screen title */
"Confirmation.title" = "Confirmation";

/* To: (address) */
"Confirmation.to" = "To";

/* Total Cost: ($5.00) */
"Confirmation.totalLabel" = "Total Cost:";

/* Validator address label on  confirmation screen */
"Confirmation.ValidatorAddress" = "Validator Address";

"ConfirmGift.paperWalletAmount" = "Paper Wallet Amount";

"ConfirmGift.processingTime" = "Validating this paper wallet on the network may take up to 60 minutes";

/* Confirm paper phrase error message */
"ConfirmPaperPhrase.error" = "The words entered do not match your recovery phrase. Please try again.";

/* Confirm paper phrase view label. */
"ConfirmPaperPhrase.label" = "To make sure everything was written down correctly, please enter the following words from your recovery phrase.";

/* Word label eg. Word #1, Word #2 */
"ConfirmPaperPhrase.word" = "Word #%1$@";

"CreateGift.amountLabel" = "Choose amount ($USD)";

"CreateGift.create" = "Create";

"CreateGift.customAmountHint" = "Custom amount ($500 max)";

"CreateGift.description" = "We'll create what's called a";

"CreateGift.inputAmountError" = "You must select a gift amount.";

"CreateGift.inputRecipientNameError" = "You must enter the name of the recipient.";

"CreateGift.insufficientBalanceError" = "You have insufficient funds to send a gift.";

"CreateGift.insufficientBalanceForAmountError" = "You have insufficient funds to send a gift of this amount.";

"CreateGift.recipientName" = "Recipient's name";

"CreateGift.serverError" = "A server error occurred. Please try again later.";

"CreateGift.subtitle" = "Send bitcoin to someone even if they don't have a wallet.";

"CreateGift.title" = "Give the Gift of Bitcoin";

"CreateGift.unexpectedError" = "An unexpected error occurred. Please contact support.";

/* Agree to legal terms button */
"Crowdsale.agree" = "Agree";

/* As in "(tap here to) buy (some) tokens" */
"Crowdsale.buyButton" = "Buy Tokens";

/* Decline to legal terms button */
"Crowdsale.decline" = "Decline";

/* Resume Idnetify verification button */
"Crowdsale.resume" = "Resume Verification";

/* Retry Identity verification button */
"Crowdsale.retry" = "Retry";

/* Bitcoin denomination picker label */
"DefaultCurrency.bitcoinLabel" = "Bitcoin Display Unit";

/* Exchange rate label */
"DefaultCurrency.rateLabel" = "Exchange Rate";

/* The wallet is disabled. */
"Disabled.title" = "Wallet disabled";

/* Share address by e-mail subject */
"Email.address_subject" = "%1$@ Address";

/* Service capabilities description */
"EME.permissions.accountRequest" = "Request %1$@ account information";

/* Service capabilities description */
"EME.permissions.callRequest" = "Request %1$@ smart contract call";

/* Service capabilities description */
"EME.permissions.paymentRequest" = "Request %1$@ payment";

"ErrorMessages.accessDenied" = "You cannot purchase assets without completing Level 2 account verification. Upgrade your limits on the Profile screen.";

/* The currency amount is to high for exchange. Accepts 2 parameters:, - maxiumum amount, - currency code */
"ErrorMessages.AmountTooHigh" = "The amount is higher than your daily limit of %@ %@. Please enter a lower amount.";

/* The currency amount is to low for exchange. Accepts 2 parameters:, - minimum amount, - currency code */
"ErrorMessages.amountTooLow" = "The amount is lower than the minimum of %@ %@. Please enter a higher amount.";

"ErrorMessages.authorizationFailed" = "Card authorization failed. Please contact your credit card issuer/bank or try another card.";

/* Accepts 3 parameters:, - currency code, - current balance, - (same) currency code */
"ErrorMessages.balanceTooLow" = "You need %@ %@ in your wallet to cover network fees. Please add more %@ to your wallet.";

/* Check your internet connection message */
"ErrorMessages.CheckInternet" = "Please, check your internet connection and try again later.";

/* Email unavailable alert title */
"ErrorMessages.emailUnavailableMessage" = "This device isn't configured to send email with the iOS mail app.";

/* Email unavailable alert title */
"ErrorMessages.emailUnavailableTitle" = "Email Unavailable";

/* Not enough ETH for transaction fee */
"ErrorMessages.ethBalanceLow" = "Insufficient Ethereum balance in your wallet to transfer this type of token.";

"ErrorMessages.exchangeFailed" = "Swap failed. Reason: %@.";

"ErrorMessages.ExchangeQuoteFailed" = "We are currently having issues making a swap between this pair of coins. Please try again later.";

"ErrorMessages.Kyc.Underage" = "You must be at least 18 years old to complete Level 1 and 2 verification.";

/* Message that gets shown when we've detected the user has encountered the looping lock-screen bug. (preserve [ ] characters) */
"ErrorMessages.loopingLockScreen.android" = "RockWallet can not be authenticated due to a bug in your version of Android. [Please tap here for more information.]";

/* Messaging unavailable alert title */
"ErrorMessages.messagingUnavailableMessage" = "This device isn't configured to send messages.";

/* Messaging unavailable alert title */
"ErrorMessages.messagingUnavailableTitle" = "Messaging Unavailable";

"ErrorMessages.networkFee" = "This swap doesn't cover the included network fee. Please add more funds to your wallet or change the amount you're swapping.";

/* Temporary network issues error message */
"ErrorMessages.NetworkIssues" = "We are having temporary network issues. Please try again later.";

/* No selected currencies error message */
"ErrorMessages.NoCurrencies" = "No selected currencies.";

"ErrorMessages.noFees" = "Failed to fetch network fees. Please try again later.";

/* Accepts 2 parameters:, - first currency code, - second currency code */
"ErrorMessages.noQuoteForPair" = "No quote for currency pair %@-%@.";

"ErrorMessages.notEnoughEthForFee" = "%@ is an ERC-20 token on the Ethereum blockchain and requires ETH network fees. Please add ETH to your wallet.";

"ErrorMessages.overDailyLimit" = "The amount is higher than your daily limit of %@ USD. Please upgrade your account or enter a lower amount.";

"ErrorMessages.overExchangeLimit" = "Over exchange limit.";

"ErrorMessages.overLifetimeLimit" = "The amount is higher than your lifetime limit of %@ USD. Please upgrade your account or enter a lower amount.";

"ErrorMessages.overLifetimeLimitLevel2" = "The amount is higher than your daily limit of %@ USD. Please enter a lower amount.";

"ErrorMessages.pendingExchange" = "A maximum of one swap can be active for a currency at a time.";

"ErrorMessages.pinConfirmationFailed" = "PIN Authentication failed.";

"ErrorMessages.selectAssets" = "In order to succesfully perform a swap, make sure you have two or more of our supported swap assets (BSV, BTC, ETH, BCH, SHIB, USDT) activated and funded within your wallet.";

/* Something went wrong message */
"ErrorMessages.SomethingWentWrong" = "Oops! Something went wrong, please try again later.";

/* Two parameters:, - maximum amount, - currency code */
"ErrorMessages.swapAmountTooHigh" = "The amount is higher than the swap maximum of %@ %@.";

"ErrorMessages.temporaryNetworkIssues" = "We are having temporary issues connecting to our network. Please try again later.";

/* Fingerprint was not recognized by the scanner, please try scanning again */
"ErrorMessages.touchIdFailed.android" = "Fingerprint not recognized. Please try again.";

/* Unknown error text message */
"ErrorMessages.UnknownError" = "Unknown error.";

"ExportConfirmation.cancel" = "Cancel";

"ExportConfirmation.continueAction" = "Continue";

"ExportConfirmation.message" = "This will generate a CSV file including all completed transactions from all enabled wallets.";

"ExportConfirmation.title" = "Export transactions?";

/* "Export transfers body" */
"ExportTransfers.body" = "This will generate a CSV file including all completed transactions from all enabled wallets.";

/* "Export transfers button" */
"ExportTransfers.confirmExport" = "Export";

/* "Export dialog error message" */
"ExportTransfers.exportFailedBody" = "Failed to export CSV file, please try again.";

/* "Export dialog error title" */
"ExportTransfers.exportFailedTitle" = "Export Failed";

/* "Export transfers header" */
"ExportTransfers.header" = "Export transactions?";

/* You can customize your Face ID Spending Limit from the [menu] */
"FaceIDSettings.customizeText" = "You can customize your Face ID spending limit from the %1$@.";

/* Text describing the purpose of the Face ID settings in the BRD app. */
"FaceIDSettings.explanatoryText" = "Use Face ID to unlock your RockWallet app and send money.";

/* Face Id screen label */
"FaceIDSettings.label" = "Use your face to unlock your RockWallet and send money up to a set limit.";

/* Title of the screen for setting the Face ID Spending Limit */
"FaceIDSettings.linkText" = "Face ID Spending Limit Screen";

/* Setting to turn on Face ID for BRD */
"FaceIDSettings.switchLabel" = "Enable Face ID for RockWallet";

/* Face ID settings view title */
"FaceIDSettings.title" = "Face ID";

/* Text label for a toggle that enables Face ID for sending money. */
"FaceIDSettings.transactionsTitleText" = "Enable Face ID to send money";

/* Instructions on how to turn on face id on the iPhone. Please ensure the name of the menu in this string matches the wording Apple uses in the iPhone menu. */
"FaceIDSettings.unavailableAlertMessage" = "You have not set up Face ID on this device. Go to Settings->Face ID & Passcode to set it up now.";

/* Face ID unavailable alert title */
"FaceIDSettings.unavailableAlertTitle" = "Face ID Not Set Up";

/* Text label for a toggle that enables Face ID for unlocking the BRD app. */
"FaceIDSettings.unlockTitleText" = "Enable Face ID to unlock RockWallet";

/* Face Id spending limit screen title */
"FaceIDSpendingLimit.title" = "Face ID Spending Limit";

/* Economy fee */
"FeeSelector.economy" = "Economy";

/* E.g. [This transaction is predicted to complete in] 1-24 hours */
"FeeSelector.economyTime" = "1-24 hours";

/* Warning message for economy fee */
"FeeSelector.economyWarning" = "This option is not recommended for time-sensitive transactions.";

/* E.g. Estimated delivery: 10-60 minutes */
"FeeSelector.estimatedDeliver" = "Estimated Delivery: %1$@";

/* [This transaction will complete in] 2-5 minutes */
"FeeSelector.ethTime" = "2-5 minutes";

"FeeSelector.lessThanMinutes" = "<%1$d minutes";

/* Priority fee */
"FeeSelector.priority" = "Priority";

/* E.g. [This transaction is predicted to complete in] 10-30 minutes */
"FeeSelector.priorityTime" = "10-30 minutes";

/* Regular fee */
"FeeSelector.regular" = "Regular";

/* E.g. [This transaction is predicted to complete in] 10-60 minutes */
"FeeSelector.regularTime" = "10-60 minutes";

/* Fee Selector title */
"FeeSelector.title" = "Processing Speed";

/* Label for the Android file chooser when we need to prompt the user to select an image file. */
"FileChooser.selectImageSource.android" = "Select Image Source";

/* Fingerprint authentication settings screen description */
"FingerprintSettings.description" = "Use your fingerprint to unlock your RockWallet app and send transactions.";

/* Switch label to enable fingerprint authentication to send money */
"FingerprintSettings.sendMoney" = "Use fingerprint to send money";

/* Fingerprint authentication settings sceen title */
"FingerprintSettings.title" = "Fingerprint";

/* Switch label to enable fingerprint authentication to unlock BRD app */
"FingerprintSettings.unlockApp" = "Use fingerprint to unlock RockWallet";

/* Activity button on the home screen toolbar */
"HomeScreen.activity" = "Activity";

/* This is the section that allows administration of the user's wallet */
"HomeScreen.admin" = "Admin";

/* Home screen menu button to buy some bitcoin */
"HomeScreen.buy" = "Buy";

/* home screen toolbar 'Buy & Sell' button */
"HomeScreen.buyAndSell" = "Buy & Sell";

/* Menu button on the home screen toolbar */
"HomeScreen.menu" = "Menu";

/* This section lists the users wallets */
"HomeScreen.portfolio" = "Wallets";

/* Pull to refresh control on Home Screen */
"HomeScreen.PullToRefresh" = "Pull to refresh";

/* Label for the total balance of all the user's assets (style is all lower case if your language permits) */
"HomeScreen.totalAssets" = "Balance";

/* (Tap here to) trade (your assets for other assets) */
"HomeScreen.trade" = "Swap";

/* Checking private key balance progress view text */
"Import.checking" = "Checking private key balance...";

/* Sweep private key confirmation message */
"Import.confirm" = "Send %1$@ from this private key into your wallet? The bitcoin network will receive a fee of %2$@.";

/* Duplicate key error message */
"Import.Error.duplicate" = "This private key is already in your wallet.";

/* empty private key error message */
"Import.Error.empty" = "This private key is empty.";

/* Failed to submit transaction error message */
"Import.Error.failedSubmit" = "Failed to submit transaction.";

/* High fees error message */
"Import.Error.highFees" = "Transaction fees would cost more than the funds available on this private key.";

/* Not a valid private key error message */
"Import.Error.notValid" = "Not a valid private key";

/* Service error error message */
"Import.Error.serviceError" = "Service Error";

/* Service Unavailable error message */
"Import.Error.serviceUnavailable" = "Service Unavailable";

/* Import signing error message */
"Import.Error.signing" = "Error signing transaction";

/* Unable to sweep wallet error message */
"Import.Error.sweepError" = "Unable to sweep wallet";

/* Unsupported currency error message */
"Import.Error.unsupportedCurrency" = "Unsupported Currency";

/* [Redeem] the funds stored on this private key. */
"Import.importButton" = "Import";

/* Importing wallet progress view label */
"Import.importing" = "Importing Wallet";

/* Caption for graphics */
"Import.leftCaption" = "Wallet to be imported";

/* Import wallet intro screen message */
"Import.message" = "Importing a wallet transfers all the money from your other wallet into your RockWallet wallet using a single transaction.";

/* Enter password alert view title */
"Import.password" = "This private key is password protected.";

/* password textfield placeholder */
"Import.passwordPlaceholder" = "password";

/* Caption for graphics */
"Import.rightCaption" = "Your RockWallet Wallet";

/* Scan Private key button label */
"Import.scan" = "Scan Private Key";

/* Import wallet success alert title */
"Import.success" = "Success";

/* Successfully imported wallet message body */
"Import.SuccessBody" = "Successfully imported wallet.";

/* Import Wallet screen title */
"Import.title" = "Import Wallet";

/* Unlocking Private key activity view message. */
"Import.unlockingActivity" = "Unlocking Key";

/* Import wallet intro warning message */
"Import.warning" = "Importing a wallet does not include transaction history or other details.";

/* Wrong password alert message */
"Import.wrongPassword" = "Wrong password, please try again.";

/* Input view invalid code */
"InputView.InvalidCode" = "Invalid code";

/* Close app button */
"JailbreakWarnings.close" = "Close";

/* Ignore jailbreak warning button */
"JailbreakWarnings.ignore" = "Ignore";

/* Jailbreak warning message */
"JailbreakWarnings.messageWithBalance" = "DEVICE SECURITY COMPROMISED\n Any 'jailbreak' app can access RockWallet's keychain data and steal your bitcoin! Wipe this wallet immediately and restore on a secure device.";

/* Jailbreak warning message */
"JailbreakWarnings.messageWithoutBalance" = "DEVICE SECURITY COMPROMISED\n Any 'jailbreak' app can access RockWallet's keychain data and steal your bitcoin. Please only use RockWallet on a non-jailbroken device.";

/* Jailbreak warning title */
"JailbreakWarnings.title" = "WARNING";

/* Wipe wallet button */
"JailbreakWarnings.wipe" = "Wipe";

/* Approve link wallet button label */
"LinkWallet.approve" = "Approve";

/* Decline link wallet button label */
"LinkWallet.decline" = "Decline";

/* Link Wallet view dislaimer footer */
"LinkWallet.disclaimer" = "External apps cannot send money without approval from this device";

/* Link Wallet view title above domain list */
"LinkWallet.domainTitle" = "Note: ONLY interact with this app when on one of the following domains";

/* Link wallet logo footer text */
"LinkWallet.logoFooter" = "Secure Checkout";

/* Link Wallet view title above permissions list */
"LinkWallet.permissionsTitle" = "This app will be able to:";

/* Link Wallet view title */
"LinkWallet.title" = "Link Wallet";

/* Location services disabled error */
"LocationPlugin.disabled" = "Location services are disabled.";

/* No permissions for location services */
"LocationPlugin.notAuthorized" = "RockWallet does not have permission to access location services.";

/* Wallet creation date prefix */
"ManageWallet.creationDatePrefix" = "You created your wallet on %1$@";

/* Manage wallet description text */
"ManageWallet.description" = "Your wallet name only appears in your account transaction history and cannot be seen by anyone else.";

/* Change Wallet name textfield label */
"ManageWallet.textFeildLabel" = "Wallet Name";

/* Manage wallet modal title */
"ManageWallet.title" = "Manage Wallet";

"MarketData.high24h" = "24h high";

"MarketData.low24h" = "24h low";

"MarketData.marketCap" = "Market Cap";

"MarketData.volume" = "Trading Volume";

/* "Add [a] Wallet [to the home screen]" */
"MenuButton.addWallet" = "Add Wallet";

/* Menu button title */
"MenuButton.atmCashRedemption" = "ATM Cash Redemption";

/* Feedback menu button title */
"MenuButton.feedback" = "Feedback";

/* Menu button title */
"MenuButton.lock" = "Lock Wallet";

/* (Click here to) manage (your list of) wallets */
"MenuButton.manageAssets" = "Manage Assets";

/* (Click here to) manage (your list of) wallets */
"MenuButton.manageWallets" = "Manage Wallets";

/* (press here to) scan (a) QR code */
"MenuButton.scan" = "Scan QR Code";

/* Menu button title */
"MenuButton.security" = "Security Settings";

/* Menu button title */
"MenuButton.settings" = "Settings";

/* Menu button title */
"MenuButton.support" = "Support";

/* button label */
"MenuViewController.createButton" = "Create New Wallet";

/* Menu modal title */
"MenuViewController.modalTitle" = "Menu";

/* button label */
"MenuViewController.recoverButton" = "Recover Wallet";

/* Paper Key Skip modal body (Android-version) */
"Modal.PaperKeySkip.Body.Android" = "Your recovery phrase is required to open your wallet if you change the security settings on your phone.\n\nAre you sure you want to set up your recovery phrase later?";

/* Paper Key Skip modal Continue Set Up button */
"Modal.PaperKeySkip.Button.ContinueSetUp" = "Continue Set Up";

/* Paper Key Skip modal I'll do it later button */
"Modal.PaperKeySkip.Button.IllDoItLater" = "I'll do it later";

/* Paper Key Skip modal title */
"Modal.PaperKeySkip.Title" = "Attention";

/* Node selection mode is automatic */
"NodeSelector.automatic" = "Automatic";

/* Switch to automatic mode button label */
"NodeSelector.automaticButton" = "Switch to Automatic Mode";

/* Node is connected label */
"NodeSelector.connected" = "Connected";

/* Node is connecting label */
"NodeSelector.connecting" = "Connecting";

/* Enter node ip address view body */
"NodeSelector.enterBody" = "Enter Node IP address and port (optional)";

/* Enter Node ip address view title */
"NodeSelector.enterTitle" = "Enter Node";

/* Entered invalid node address at the node selection screen */
"NodeSelector.invalid" = "Invalid Node";

/* Switch to manual mode button label */
"NodeSelector.manualButton" = "Switch to Manual Mode";

/* Node address label */
"NodeSelector.nodeLabel" = "Current Primary Node";

/* Node is not connected label */
"NodeSelector.notConnected" = "Not Connected";

/* Node status label */
"NodeSelector.statusLabel" = "Node Connection Status";

/* Node Selector view title */
"NodeSelector.title" = "Bitcoin Nodes";

/* Onboarding screen 'I'll browse first' button */
"Onboarding.browseFirst" = "I'll browse first";

/* Onboarding screen 'Buy some coin' button */
"Onboarding.buyCoin" = "Buy some coin";

/* Onboarding screen 'Get started' (create new wallet) button */
"Onboarding.getStarted" = "Get started";

/* Onboarding screen 'Next' button */
"Onboarding.next" = "Next";

/* Onboarding screen restore an existing wallet. */
"Onboarding.restoreWallet" = "Restore wallet";

/* Onboarding screen Skip button title that allows the user to exit the onboarding process. */
"Onboarding.skip" = "Skip";

/* Onboarding screen Page 4 title */
"OnboardingPageFour.title" = "Start investing today with as little as $50!";

/* Onboarding screen Page 1 title */
"OnboardingPageOne.title" = "Empowering you in the emerging digital asset economy";

/* Onboarding screen Page 3 subtitle */
"OnboardingPageThree.subtitle" = "Invest and diversify with RockWallet, easily and securely.";

/* Onboarding screen Page 3 title */
"OnboardingPageThree.title" = "Buy and swap bitcoin, tokens, and other digital currencies.";

/* Onboarding screen Page 2 subtitle */
"OnboardingPageTwo.subtitle" = "We have over $6 billion USD worth of assets under protection.";

/* Onboarding screen Page 2 title */
"OnboardingPageTwo.title" = "Join people around the world who trust RockWallet.";

/* Eg. Send 1.0Eth to purchase CCC */
"PaymentConfirmation.amountText" = "Send %1$@ to purchase %2$@";

/* Payment expired message */
"PaymentConfirmation.PaymentExpired" = "The payment has expired due to inactivity. Please try again with the same card, or use a different card.";

/* Payment verification timeout message */
"PaymentConfirmation.PaymentTimeout" = "Payment verification timeout";

/* Payment confirmation view title */
"PaymentConfirmation.title" = "Confirmation";

/* Try again button title in payment view */
"PaymentConfirmation.TryAgain" = "Try again";

/* Bad Payment request alert title */
"PaymentProtocol.Errors.badPaymentRequest" = "Bad Payment Request";

/* Error opening payment protocol file message */
"PaymentProtocol.Errors.corruptedDocument" = "Unsupported or corrupted document";

/* Missing certificate payment protocol error message */
"PaymentProtocol.Errors.missingCertificate" = "missing certificate";

/* Request expired payment protocol error message */
"PaymentProtocol.Errors.requestExpired" = "request expired";

/* Payment too small alert title */
"PaymentProtocol.Errors.smallOutputError" = "Couldn't make payment";

/* Amount too small error message */
"PaymentProtocol.Errors.smallPayment" = "Payment can’t be less than %1$@. Bitcoin transaction fees are more than the amount of this transaction. Please increase the amount and try again.";

/* Output too small error message. */
"PaymentProtocol.Errors.smallTransaction" = "Bitcoin transaction outputs can't be less than %1$@.";

/* Unsupported signature type payment protocol error message */
"PaymentProtocol.Errors.unsupportedSignatureType" = "unsupported signature type";

/* Untrusted certificate payment protocol error message */
"PaymentProtocol.Errors.untrustedCertificate" = "untrusted certificate";

"Platform.transaction_cancelled" = "Transaction Cancelled";

/* Body text for a prompt that asks the user to subscribe to email updates to find out product updates. */
"Prompts.Email.body" = "Be the first to receive important support and product updates";

/* Placeholder text for an email address text field. */
"Prompts.Email.placeholder" = "enter your email";

/* Body text that is shown when the user successfully subscribes to email updates. */
"Prompts.Email.successBody" = "You have successfully subscribed to receive updates";

/* Text that is displayed as a footnote when the user successfully subscribes to email updates. */
"Prompts.Email.successFootnote" = "We appreciate your continued support";

/* Title that is shown when the user successfully subscribes to email updates. */
"Prompts.Email.successTitle" = "Thank you!";

/* Title for a prompt that asks the user to subscribe to email updates to find out product updates. */
"Prompts.Email.title" = "Get in the loop";

/* Body text for a prompt that asks the user to subscribe to email updates to find out product updates., Placeholder text for an email address text field., Body text that is shown when the user successfully subscribes to email updates., Text that is displayed as a footnote when the user successfully subscribes to email updates., Title that is shown when the user successfully subscribes to email updates., Title for a prompt that asks the user to subscribe to email updates to find out product updates., Enable face ID prompt body */
"Prompts.FaceId.body" = "Tap continue to enable Face ID";

/* Enable face ID prompt title */
"Prompts.FaceId.title" = "Enable Face ID";

/* No passcode set warning body */
"Prompts.NoPasscode.body" = "A device passcode is needed to safeguard your wallet. Go to settings and turn passcode on.";

/* No Passcode set warning title */
"Prompts.NoPasscode.title" = "Turn device passcode on";

/* Instructions on how to enable screen lock settings */
"Prompts.NoScreenLock.body.android" = "A device screen lock is needed to safeguard your wallet. Enable screen lock in your settings to continue.";

/* Device encryption prompt title */
"Prompts.NoScreenLock.title.android" = "Screen lock disabled";

/* Warning about recovery phrase (formerly paper key). */
"Prompts.PaperKey.body" = "Set up your recovery phrase in case you ever lose or replace your phone. This is also required if you change your phone's security settings.";

/* Warning about paper key (Android-version) */
"Prompts.PaperKey.Body.Android" = "Set up your recovery phrase in case you ever lose or replace your phone. Your key is also required if you change your phone's security settings.";

/* An action is required (You must do this action). */
"Prompts.PaperKey.title" = "Action Required";

"Prompts.RateApp.dontShow" = "Don't ask again";

"Prompts.RateApp.enjoyingBrd" = "Enjoying RockWallet?";

"Prompts.RateApp.googlePlayReview" = "Your review helps grow the RockWallet community.";

"Prompts.RateApp.noThanks" = "No thanks";

"Prompts.RateApp.rateUs" = "Review us";

/* Transaction rejected prompt body */
"Prompts.RecommendRescan.body" = "Your wallet may be out of sync. This can often be fixed by pulling down this screen to refresh.";

/* Transaction rejected prompt title */
"Prompts.RecommendRescan.title" = "Transaction Rejected";

/* Share data prompt body */
"Prompts.ShareData.body" = "Help improve RockWallet by sharing your anonymous data with us";

/* Share data prompt title */
"Prompts.ShareData.title" = "Share Anonymous Data";

/* Enable touch ID prompt body */
"Prompts.TouchId.body" = "Tap continue to enable Fingerprint authentication.";

/* Enable Fingerprint prompt body */
"Prompts.TouchId.body.android" = "Tap here to enable fingerprint authentication";

/* Enable touch ID prompt title */
"Prompts.TouchId.title" = "Enable Touch ID";

/* Enable Fingerprint prompt title */
"Prompts.TouchId.title.android" = "Enable Fingerprint Authentication";

/* Button on fingerprint prompt so the user can enter their PIN instead */
"Prompts.TouchId.usePin.android" = "PIN";

/* Upgrade PIN prompt body. */
"Prompts.UpgradePin.body" = "RockWallet has upgraded to using a 6-digit PIN. Tap Continue to upgrade.";

/* Upgrade PIN prompt title. */
"Prompts.UpgradePin.title" = "Upgrade PIN";

/* Body text for the push notifications prompt. */
"PushNotifications.body" = "Turn on push notifications and be the first to hear about new features and special offers.";

/* Push notifications are disabled alert title" */
"PushNotifications.disabled" = "Notifications Disabled";

/* Body text when push notifications are disabled. */
"PushNotifications.disabledBody" = "Turn on notifications to receive special offers and updates from RockWallet.";

/* Body text when push notifications are enabled. */
"PushNotifications.enabledBody" = "You’re receiving special offers and updates from RockWallet.";

/* Instructions to enable push notifications for BRD in the phone's system settings. */
"PushNotifications.enableInstructions" = "Looks like notifications are turned off. Please go to Settings to enable notifications from RockWallet.";

/* Push notifications toggle switch label */
"PushNotifications.label" = "Receive Push Notifications";

/* Push notifications are off label */
"PushNotifications.off" = "Off";

/* Push notifications are on label */
"PushNotifications.on" = "On";

/* Push notifications settings view title label */
"PushNotifications.title" = "Stay in the Loop";

/* Push notifications settings failed to update settings on the back end */
"PushNotifications.updateFailed" = "Failed to update push notifications settings";

/* Google play review prompt body */
"RateAppPrompt.Body.Android" = "If you love our app, please take a moment to rate it and give us a review.";

/* Google play review prompt, revivew button */
"RateAppPrompt.Button.Dismiss.Android" = "No Thanks";

/* Google play review prompt, dismiss button */
"RateAppPrompt.Button.RateApp.Android" = "Rate RockWallet";

/* Google play review prompt title */
"RateAppPrompt.Title.Android" = "Rate RockWallet";

/* Address copied message. */
"Receive.copied" = "Copied to clipboard";

/* Share via email button label */
"Receive.emailButton" = "Email";

/* Request button label */
"Receive.request" = "Request an Amount";

/* Share button label */
"Receive.share" = "Share";

/* Share via text message (SMS) */
"Receive.textButton" = "Text Message";

/* Receive modal title */
"Receive.title" = "Receive";

/* Done button text */
"RecoverWallet.done" = "Done";

/* Enter recovery phrase label to delete the wallet */
"RecoverWallet.EnterRecoveryPhrase" = "Please enter your recovery phrase to delete this wallet from your device.";

/* Recover wallet header */
"RecoverWallet.header" = "Recover Wallet";

/* Reset PIN with paper key: header */
"RecoverWallet.header_reset_pin" = "Reset your PIN";

/* Enter paper key instruction */
"RecoverWallet.instruction" = "Enter Recovery Phrase";

/* Recover wallet intro */
"RecoverWallet.intro" = "Recover your RockWallet with your recovery phrase.";

/* Invalid paper key message */
"RecoverWallet.invalid" = "The recovery phrase you entered is invalid. Please double-check each word and try again.";

/* Previous button accessibility label */
"RecoverWallet.leftArrow" = "Left Arrow";

/* Next button label */
"RecoverWallet.next" = "Next";

/* What Is recovery phrase text popup */
"RecoverWallet.RecoveryPhrasePopup" = "A Recovery Phrase consists of 12 randomly generated words. The app creates the Recovery Phrase for you automatically when you start a new wallet. The Recovery Phrase is critically important and should be written down and stored in a safe location. In the event of phone theft, destruction, or loss, the Recovery Phrase can be used to load your wallet onto a new phone. The key is also required when upgrading your current phone to a new one.";

/* Reset PIN with paper key: more information button. */
"RecoverWallet.reset_pin_more_info" = "Tap here for more information.";

/* Next button accessibility label */
"RecoverWallet.rightArrow" = "Right Arrow";

/* Recover wallet sub-header */
"RecoverWallet.subheader" = "Enter the recovery phrase for the wallet you want to recover.";

/* Reset PIN with paper key: sub-header */
"RecoverWallet.subheader_reset_pin" = "To reset your PIN, enter the words from your recovery phrase into the boxes below.";

/* What is recovery phrase title on popup */
"RecoverWallet.WhatIsRecoveryPhrase" = "What is “Recovery Phrase”?";

/* Instructs the user to enter words from the set of recovery key words. */
"RecoveryKeyFlow.confirmRecoveryInputError" = "The word you entered is incorrect. Please try again.";

/* Instructs the user to enter words from the set of recovery phrase words. */
"RecoveryKeyFlow.confirmRecoveryKeySubtitle" = "Almost done! Enter the following words from your recovery phrase.";

/* Title for the confirmation step of the recovery phrase flow. */
"RecoveryKeyFlow.confirmRecoveryKeyTitle" = "Confirm Recovery Phrase";

/* Title displayed when the user starts the process of entering a recovery phrase */
"RecoveryKeyFlow.enterRecoveryKey" = "Enter Recovery Phrase";

/* Subtitle displayed when the user starts the process of entering a recovery phrase */
"RecoveryKeyFlow.enterRecoveryKeySubtitle" = "Please enter your recovery phrase to unlink this wallet from your device.";

/* Body text for an alert dialog asking the user whether to set up the recovery phrase later */
"RecoveryKeyFlow.exitRecoveryKeyPromptBody" = "Are you sure you want to set up your recovery phrase later?";

/* Title for an alert dialog asking the user whether to set up the recovery key later */
"RecoveryKeyFlow.exitRecoveryKeyPromptTitle" = "Set Up Later";

/* Button text for the 'Generate Recovery Phrase' button */
"RecoveryKeyFlow.generateKeyButton" = "Generate Recovery Phrase";

/* Subtext for the recovery key landing page. */
"RecoveryKeyFlow.generateKeyExplanation" = "This is required to restore your wallet if you upgrade or lose your phone.";

/* Default title for the recovery phrase landing page */
"RecoveryKeyFlow.generateKeyTitle" = "Generate your private recovery phrase";

/* Title for a button that takes the user to the wallet after setting up the recovery key. */
"RecoveryKeyFlow.goToWalletButtonTitle" = "Go to Wallet";

/* Hint text for recovery key intro page, e.g., Step 2 */
"RecoveryKeyFlow.howItWorksStep" = "How it works - Step %1$@";

/* Error text displayed when the user enters an incorrect recovery phrase */
"RecoveryKeyFlow.invalidPhrase" = "Some of the words you entered do not match your recovery phrase. Please try again.";

/* Title for recovery key intro page */
"RecoveryKeyFlow.keepSecure" = "Write down your Recovery Phrase";

/* Informs the user that the recovery is only required for recovering a wallet. */
"RecoveryKeyFlow.keyUseHint" = "Your key is only needed for recovery, not for everyday wallet access.";

/* Reminds the user not to take screenshots or email the recovery key words */
"RecoveryKeyFlow.noScreenshotsOrEmailWarning" = "For security purposes, do not screenshot or email these words";

/* Recommends that the user avoids capturing the paper key with a screenshot */
"RecoveryKeyFlow.noScreenshotsRecommendation" = "Write down your key on paper and confirm it. Screenshots are not recommended for security reasons.";

/* Title displayed when the user starts the process of recovering a wallet */
"RecoveryKeyFlow.recoveryYourWallet" = "Restore Your Wallet";

/* Subtitle displayed when the user starts the process of recovering a wallet */
"RecoveryKeyFlow.recoveryYourWalletSubtitle" = "Please enter the Recovery Phrase of the wallet you want to restore";

/* Title for recovery key intro page */
"RecoveryKeyFlow.relaxBuyTrade" = "Keep your Recovery Phrase in a secure location";

/* Reminds the user to write down the recovery key words. */
"RecoveryKeyFlow.rememberToWriteDownReminder" = "Remember to write these words down. Swipe back if you forgot.";

/* Instruction displayed when the user is resetting the PIN, which requires the recovery phrase to be entered */
"RecoveryKeyFlow.resetPINInstruction" = "Please enter your recovery phrase to reset your PIN.";

/* Assures the user that BRD will keep the user's funds secure. */
"RecoveryKeyFlow.securityAssurance" = "Remember that this is the only way to restore your wallet. RockWallet does not keep a copy.";

/* Recommends that the user stores the recovery key in a secure location */
"RecoveryKeyFlow.storeSecurelyRecommendation" = "For security reasons, screenshots are not recommended, as anyone with your Recovery Phrase can access your funds.";

/* Title for the success page after the recovery phrase has been set up */
"RecoveryKeyFlow.successHeading" = "Congratulations! You completed your recovery phrase setup.";

/* Subtitle for the success page after the recovery key has been set up */
"RecoveryKeyFlow.successSubheading" = "You're all set to deposit, swap, and buy crypto from your RockWallet wallet.";

/* Title displayed to the user on the intro screen when unlinking a wallet */
"RecoveryKeyFlow.unlinkWallet" = "Unlink your wallet from this device.";

/* Subtitle displayed to the user on the intro screen when unlinking a wallet. */
"RecoveryKeyFlow.unlinkWalletSubtext" = "Start a new wallet by unlinking your device from the currently installed wallet.";

/* Warning displayed when the user starts the process of unlinking a wallet */
"RecoveryKeyFlow.unlinkWalletWarning" = "Wallet must be recovered to regain access.";

/* Title displayed to the user on the intro screen when wiping a wallet */
"RecoveryKeyFlow.wipeWallet" = "Wipe your wallet from this device.";

/* Subtitle displayed to the user on the intro screen when wiping a wallet. */
"RecoveryKeyFlow.wipeWalletSubtext" = "Start a new wallet by wiping the current wallet from your device.";

/* Title for recovery key intro page */
"RecoveryKeyFlow.writeItDown" = "Write down your key";

/* Title for the recovery phrase landing page if the key has already been generated. */
"RecoveryKeyFlow.writeKeyAgain" = "Write down your recovery phrase again";

/* Subtitle for the write recovery key screen */
"RecoveryKeyFlow.writeKeyScreenSubtitle" = "Write down the following words in order.";

/* Title for the write recovery phrase screen */
"RecoveryKeyFlow.writeKeyScreenTitle" = "Recovery Phrase";

/* Title for the step number when the user pages through the recovery words */
"RecoveryKeyFlow.writeKeyStepTitle" = "%1$@ of %2$@";

"RecoveryKeyOnboarding.description1" = "This is required to restore your wallet if you upgrade or lose your phone.";

"RecoveryKeyOnboarding.description2" = "For security reasons, screenshots are not recommended, as anyone with your Recovery Phrase can access your funds.";

"RecoveryKeyOnboarding.description3" = "Remember that this is the only way to restore your wallet. RockWallet does not keep a copy.";

"RecoveryKeyOnboarding.title1" = "Generate your private Recovery Phrase";

"RecoveryKeyOnboarding.title2" = "Write down your Recovery Phrase";

"RecoveryKeyOnboarding.title3" = "Keep your Recovery Phrase in a secure location";

"RecoveryKeyOnboarding.titlePage1" = "Generate your private Recovery Phrase";

/* No amount entered error message. */
"RequestAnAmount.noAmount" = "Please enter an amount first.";

/* Request a specific amount of bitcoin */
"RequestAnAmount.title" = "Request an Amount";

/* Alert action button label */
"ReScan.alertAction" = "Sync";

/* Alert message body */
"ReScan.alertMessage" = "You will not be able to send money while syncing.";

/* Alert message title */
"ReScan.alertTitle" = "Sync with Blockchain?";

/* extimated time */
"ReScan.body1" = "20-45 minutes";

/* Syncing explanation */
"ReScan.body2" = "If a transaction shows as completed on the network but not in your RockWallet.";

/* Syncing explanation */
"ReScan.body3" = "You repeatedly get an error saying your transaction was rejected.";

/* Start Sync button label */
"ReScan.buttonTitle" = "Start Sync";

/* Sync blockchain view footer */
"ReScan.footer" = "You will not be able to send money while syncing with the blockchain.";

/* Sync Blockchain view header */
"ReScan.header" = "Sync Blockchain";

/* Subheader label */
"ReScan.subheader1" = "Estimated time";

/* Subheader label */
"ReScan.subheader2" = "When to Sync?";

/* Rewards view expanded body. */
"RewardsView.expandedBody" = "Learn how you can save on trading fees and unlock future rewards";

/* Rewards view expanded title. */
"RewardsView.expandedTitle" = "Introducing RockWallet Rewards.";

/* Rewards view title */
"RewardsView.normalTitle" = "Rewards";

/* Scan bitcoin address camera flash toggle */
"Scanner.flashButtonLabel" = "Camera Flash";

/* (alert dialog message) Would you like to send a [Bitcoin / Bitcoin Cash / Ethereum] payment to this address?") */
"Scanner.paymentPromptMessage" = "Would you like to send a %1$@ payment to this address?";

/* alert dialog title */
"Scanner.paymentPromptTitle" = "Send Payment";

/* Complete filter label */
"Search.complete" = "complete";

/* Pending filter label */
"Search.pending" = "pending";

/* Received filter label */
"Search.received" = "received";

/* [Click here to] search */
"Search.search" = "Search";

/* Sent filter label */
"Search.sent" = "sent";

/* Face ID button title */
"SecurityCenter.faceIdTitle" = "Face ID";

/* Paper Key button description */
"SecurityCenter.paperKeyDescription" = "The only way to access your assets if you lose or upgrade your phone.";

/* Recovery Phrase button title. This used to be called 'paper key', so leaving the string key as `paperKeyTitle` in order, * to not break existing client code. */
"SecurityCenter.paperKeyTitle" = "Recovery Phrase";

/* Paper Key button title */
"SecurityCenter.paperKeyTitle.android" = "Recovery Phrase";

/* PIN button description */
"SecurityCenter.pinDescription" = "Protects your RockWallet from unauthorized users.";

/* PIN button title */
"SecurityCenter.pinTitle" = "6-Digit PIN";

/* Touch ID button description */
"SecurityCenter.touchIdDescription" = "Conveniently unlock your RockWallet and send money up to a set limit.";

/* Touch ID button title */
"SecurityCenter.touchIdTitle" = "Touch ID";

/* Security center fingerprint authentication button */
"SecurityCenter.touchIdTitle.android" = "Fingerprint Authentication";

/* Segwit enabled confirmation title */
"Segwit.ConfirmationConfirmationTitle" = "You have enabled SegWit!";

/* Segwit instructions */
"Segwit.ConfirmationInstructionsInstructions" = "SegWit support is still a beta feature.\n\nOnce SegWit is enabled, it will not be possible\nto disable it. You will be able to find the legacy address under Settings. \n\nSome third-party services, including crypto trading, may be unavailable to users who have enabled SegWit. In case of emergency, you will be able to generate a legacy address from Preferences > BTC Settings. \n\nSegWit will automatically be enabled for all\nusers in a future update.";

/* Segwit extra confirmation title. */
"Segwit.ConfirmChoiceLayout" = "Enabling SegWit is an irreversible feature. Are you sure you want to continue?";

/* Segwit enableButton */
"Segwit.Enable" = "Enable";

/* Segwit button label that takes the user back to the home screen once SegWit is enabled. */
"Segwit.HomeButton" = "Proceed";

"Send_fio_toLabel" = "FIO";

/* Send money amount label */
"Send.amountLabel" = "Amount";

/* Balance: $4.00 */
"Send.balance" = "Balance: %1$@";

/* Balance: $4.00 for iOS, the balance can't have a parameter */
"Send.balanceString" = "Balance:";

/* Instructions how to allow the camera access for the app */
"Send.cameraUnavailabeMessage.android" = "Allow camera access in \"Settings\" > \"Apps\" > \"RockWallet\" > \"Permissions\"";

/* Permission required to access camera */
"Send.cameraUnavailabeTitle.android" = "RockWallet is not allowed to access the camera";

/* Camera not allowed message */
"Send.cameraunavailableMessage" = "Go to Settings to allow camera access.";

/* Camera not allowed alert title */
"Send.cameraUnavailableTitle" = "RockWallet is not allowed to access the camera";

/* Warning when sending to self. */
"Send.containsAddress" = "The destination is your own address. You cannot send to yourself.";

/* Could not create transaction alert title */
"Send.creatTransactionError" = "Could not create transaction.";

/* Description for sending money label */
"Send.descriptionLabel" = "Memo";

/* Destination tag is too long error message in send view */
"Send.DestinationTag" = "Destination tag is too long.";

/* Optional Destination Tag label */
"Send.destinationTag_optional" = "Destination Tag";

/* Required Destination Tag label */
"Send.destinationTag_required" = "Destination Tag (Required)";

"Send.destinationTag_required_error" = "A valid Destination Tag is required for the target address.";

/* Destination Tag text explanation popup in send view */
"Send.DestinationTagText" = "Some receiving addresses (exchanges usually) require additional identifying information provided with a Destination Tag.\n\nIf the recipient's address is accompanied by a destination tag, make sure to include it.\nAlso, we strongly suggest you send a small amount of cryptocurrency as a test before attempting to send a significant amount.";

/* Emtpy pasteboard error message */
"Send.emptyPasteboard" = "Pasteboard is empty";

/* Sending error message */
"Send.Error.authenticationError" = "Authentication Error";

/* Error calculating maximum. */
"Send.Error.maxError" = "Could not calculate maximum";

/* "(you) can't send (to your)self" */
"Send.ethSendSelf" = "Can't send to self.";

/* Network Fee: $0.01 */
"Send.fee" = "Network Fee: %1$@";

"Send.fio_invalid" = "Invalid FIO address.";

"Send.fio_noAddress" = "There is no %1$@ address associated with this FIO address.";

"Send.fio_retrievalError" = "There was an error retrieving the address for this FIO address. Please try again later.";

/* Payee identity not certified alert title. */
"Send.identityNotCertified" = "Payee identity isn't certified.";

/* Insufficient funds error */
"Send.insufficientFunds" = "Insufficient Funds";

/* e,g, "You must have at least $2 in your wallet in order to transfer this type of token." In this case, "token" is an ethereum ERC20 token. */
"Send.insufficientGasMessage" = "You must have at least %1$@ in your wallet in order to transfer this type of token. Would you like to go to your Ethereum wallet now?";

/* Your ethereum balance is insufficient to complete this action. */
"Send.insufficientGasTitle" = "Insufficient Ethereum Balance";

/* e.g. The destination is not a valid (bitcoin) address. */
"Send.invalidAddressMessage" = "The destination address is not a valid %1$@ address.";

/* Invalid address on pasteboard message */
"Send.invalidAddressOnPasteboard" = "Pasteboard does not contain a valid %1$@ address.";

/* Invalid address alert title */
"Send.invalidAddressTitle" = "Invalid Address";

/* Is rescanning error message */
"Send.isRescanning" = "Sending is disabled during a full rescan.";

/* Warning when the user is trying to send bitcoin cash to a legacy bitcoin address (possible, but probably not what the user wants to do) */
"Send.legacyAddressWarning" = "Warning: this is a legacy bitcoin address. Are you sure you want to send Bitcoin Cash to it?";

/* We are loading the request (now) */
"Send.loadingRequest" = "Loading Request";

/* Hedera Memo Tag Label */
"Send.memoTag_optional" = "Hedera Memo (Optional)";

/* Transaction fee could not be be caluculated error. */
"Send.nilFeeError" = "Insufficient funds to cover the transaction fee.";

/* Empty address alert message */
"Send.noAddress" = "Please enter the recipient's address.";

/* Emtpy amount alert message */
"Send.noAmount" = "Please enter an amount to send.";

/* No fee estimate error on send view */
"Send.NoFeeEstimate" = "No fee estimate";

/* No Fees error */
"Send.noFeesError" = "Network Fee conditions are being downloaded. Please try again.";

/* Paste button label */
"Send.pasteLabel" = "Paste";

/* Error message for invalid PayID */
"Send.payId_invalid" = "Invalid PayString.";

/* Error message for no address associated with a PayID for a given currency */
"Send.payId_noAddress" = "There is no %1$@ address associated with this PayString.";

/* Error message for error in retrieving the address from the PayID endpoint */
"Send.payId_retrievalError" = "There was an error retrieving the address for this PayString. Please try again later.";

/* PayID label */
"Send.payId_toLabel" = "PayString";

/* Could not publish transaction alert title */
"Send.publishTransactionError" = "Could not publish transaction.";

/* Could not load remote request error message */
"Send.remoteRequestError" = "Could not load payment request";

/* Scan button label */
"Send.scanLabel" = "Scan";

/* Title for error when send request times out and we are not sure weather it succesfull or not. */
"Send.sendError" = "Send Error";

/* Sending Max: $4.00 for iOS, the balance can't have a parameter */
"Send.sendingMax" = "Sending Max:";

/* Send button label (the action, "press here to send") */
"Send.sendLabel" = "Send";

/* Send button label (for special case where the user specified send amount is too high and does not leave a balance to cover fees.) */
"Send.sendMaximum" = "Send maximum amount?";

/* Error message when send request times out and we are not sure weather it succesfull or not. */
"Send.timeOutBody" = "Timed out waiting for network response. Please wait 30 minutes for confirmation before retrying.";

/* Send screen title (as in "this is the screen for sending money") */
"Send.title" = "Send";

/* Send money to label */
"Send.toLabel" = "To";

/* Adress already used alert message - first part */
"Send.UsedAddress.firstLine" = "Bitcoin addresses are intended for single use only.";

/* Adress already used alert message - second part */
"Send.UsedAddress.secondLIne" = "Re-use reduces privacy for both you and the recipient and can result in loss if the recipient doesn't directly control the address.";

/* Adress already used alert title */
"Send.UsedAddress.title" = "Address Already Used";

/* What is a destination tag title in popup in send view */
"Send.WhatIsDestinationTag" = "What is a destination tag?";

/* Section header for "other settings". */
"Settings.other" = "Other";

/* About label */
"Settings.about" = "About";

/* Advanced settings header */
"Settings.advanced" = "Advanced";

/* Advanced Settings title */
"Settings.advancedTitle" = "Advanced Settings";

/* ATM map menu item title explaining that it's a feature only available in the USA */
"Settings.atmMapMenuItemSubtitle" = "Available in the USA only";

/* ATM map menu item title */
"Settings.atmMapMenuItemTitle" = "Crypto ATM Map";

/* i.e. the currency which will be displayed */
"Settings.currency" = "Display Currency";

/* e.g. "USD Settings" (settings for how USD is handled) */
"Settings.currencyPageTitle" = "%1$@ Settings";

/* Section title for a collection of different settings screens, one for each currency */
"Settings.currencySettings" = "Currency Settings";

/* Join Early access label */
"Settings.earlyAccess" = "Join Early Access";

/* Enable segwit. */
"Settings.EnableSegwit" = "Enable Segwit";

/* Are you enjoying bread alert message body */
"Settings.enjoying" = "Are you enjoying RockWallet?";

/* Export transaction history menu item */
"Settings.exportTransfers" = "Export transaction history to CSV";

/* Face ID spending limit label */
"Settings.faceIdLimit" = "Face ID Spending Limit";

/* Redeem the funds stored on this private key. */
"Settings.importTitle" = "Redeem Private Key";

/* Manage settings section header */
"Settings.manage" = "Manage";

/* No log files found error message */
"Settings.noLogsFound" = "No Log files found. Please try again later.";

/* Notifications label */
"Settings.notifications" = "Notifications";

/* Preferences settings section header */
"Settings.preferences" = "Preferences";

/* Tap here to reset the list of currencies to the default settings. */
"Settings.resetCurrencies" = "Reset to Default Currencies";

/* Leave review button label */
"Settings.review" = "Leave us a Review";

/* Rewards menu item */
"Settings.rewards" = "Rewards";

/* Share anonymous data label */
"Settings.shareData" = "Share Anonymous Data";

/* "Enables sharing balance to widget" */
"Settings.shareWithWidget" = "Share portfolio data with widgets";

/* Sync blockchain label */
"Settings.sync" = "Sync Blockchain";

/* Settings title */
"Settings.title" = "Menu";

/* Touch ID spending limit label */
"Settings.touchIdLimit" = "Touch ID Spending Limit";

/* The fingerprint spending limit */
"Settings.touchIdLimit.android" = "Fingerprint Authentication Spending Limit";

/* View legacy address (old format). */
"Settings.ViewLegacyAddress" = "View Legacy Receive Address";

/* Receive Bitcoin instructions */
"Settings.ViewLegacyAddressReceiveDescription" = "Only send Bitcoin (BTC) to this address. Any other asset sent to this address will be lost permanently.";

/* Receive Bitcoin */
"Settings.ViewLegacyAddressReceiveTitle" = "Receive Bitcoin";

/* Wallet Settings section header */
"Settings.wallet" = "Wallets";

/* Unlink/delete your wallet from the current device. */
"Settings.wipe" = "Unlink from this device";

/* Wipe/delete your wallet from the current device. */
"Settings.wipe.android" = "Wipe wallet from this device";

/* Share data view body */
"ShareData.body" = "Help improve RockWallet by sharing your anonymous data with us. This does not include any financial information. We respect your financial privacy.";

/* Share data header */
"ShareData.header" = "Share Data?";

/* Share data switch label. */
"ShareData.toggleLabel" = "Share Anonymous Data?";

"ShareGift.approximateTotal" = "Approximate Total";

"ShareGift.footerMessage1" = "A network fee will be deducted from the total when claimed.\nActual value depends on current price of bitcoin.";

"ShareGift.footerMessage2" = "Download the RockWallet app for iPhone or Android.\nFor more information visit RockWallet.com/gift";

"ShareGift.tagLine" = "Someone gifted you bitcoin!";

"ShareGift.walletName" = "Bitcoin";

/* Button label: select a baker */
"Staking.add" = "+ Select Baker";

/* Baker cell: Free Space field header */
"Staking.cellFreeSpaceHeader" = "Free Space";

"Staking.changeValidator" = "Change";

"Staking.descriptionTezos" = "Delegate your Tezos account to a validator to earn a reward while keeping full security and control of your coins.";

/* Baker cell: Fee field header */
"Staking.feeHeader" = "Fee:";

/* Status label: current staking transaction is pending */
"Staking.pendingTransaction" = "Transaction pending...";

/* Button label: remove selected baker */
"Staking.remove" = "Remove";

/* Baker cell: ROI field header */
"Staking.roiHeader" = "Est. ROI";

/* Modal title: Select Baker modal */
"Staking.selectBakerTitle" = "Select XTZ Delegate";

"Staking.stake" = "Stake";

/* UI flag showing state of Tezos staking */
"Staking.stakingActiveFlag" = "ACTIVE";

/* UI flag showing state of Tezos staking */
"Staking.stakingInactiveFlag" = "INACTIVE";

/* UI flag showing state of Tezos staking */
"Staking.stakingPendingFlag" = "PENDING";

/* Staking banner title */
"Staking.stakingTitle" = "Staking";

"Staking.stakingTo" = "staking to %1$@";

"Staking.statusPending" = "Pending";

"Staking.statusStaked" = "Staked!";

"Staking.subTitle" = "Earn money while holding";

/* Tezos XTZ baker asset type */
"Staking.tezosDune" = "Tezos & Dune";

/* Tezos XTZ baker asset type */
"Staking.tezosMultiasset" = "Multiasset Pool";

/* Tezos XTZ baker asset type */
"Staking.tezosOnly" = "Tezos-only";

"Staking.title" = "Stake %1$@";

"Staking.unstake" = "Unstake";

"Staking.validatorHint" = "Enter Validator Address";

/* button label */
"StartPaperPhrase.againButtonTitle" = "Write Down Recovery Phrase Again";

/* Paper key explanation text. */
"StartPaperPhrase.body" = "Your recovery phrase is the only way to restore your RockWallet if your phone is lost, stolen, broken, or upgraded.\n\nWe will show you a list of words to write down on a piece of paper and keep safe.";

/* Paper key explanation text (Android-version) */
"StartPaperPhrase.Body.Android" = "Your recovery phrase is the only way to restore your RockWallet if your phone is lost, stolen, broken, or upgraded.\n\nYour recovery phrase is also required if you change the security settings on your device.\n\nWe will show you a list of words to write down on a piece of paper and keep safe.";

/* button label */
"StartPaperPhrase.buttonTitle" = "Write Down Recovery Phrase";

/* Argument is date; date should be on a new line */
"StartPaperPhrase.date" = "Last written down on\n %1$@";

/* button label */
"StartViewController.createButton" = "Create New Wallet";

/* Start view message */
"StartViewController.message" = "Moving money forward.";

/* Recover your wallet from a backup */
"StartViewController.recoverButton" = "Recover Wallet";

"SupportForm.feedbackAppreciated" = "We would love your feedback";

"SupportForm.helpUsImprove" = "Help us improve";

"SupportForm.notNow" = "Not now";

"SupportForm.pleaseDescribe" = "Please describe your experience";

/* Add item label in swap flow */
"Swap.AddItem" = "Add item!";

/* Amount purchased label in detail swap screen */
"Swap.AmountPurchased" = "Amount purchased";

"Swap.AmountPurchased.android" = "Amount purchased:";

/* Back to Home button */
"Swap.BackToHome" = "Back to Home";

/* Balance text on swap */
"Swap.Balance" = "I have %@ %@";

/* Card fee label in swap details screen */
"Swap.CardFee" = "Card fee";

"Swap.CardFee.android" = "Card fee:";

/* Title on check your assets popup */
"Swap.CheckAssets" = "Check your assets!";

/* Text body in check your assets popup */
"Swap.CheckAssetsBody" = "In order to successfully perform a swap, make sure you have two or more of our supported swap assets (BSV, BTC, ETH, BCH, SHIB, USDT) activated and funded within your wallet.";

/* Swap details title */
"Swap.Details" = "Swap details";

"Swap.enableAssetFirst" = "Asset needs to be enabled first. You can do that by selecting ‘Manage assets’ on the home screen.";

/* There was an error while processing your transaction title in failure swap screen */
"Swap.ErrorProcessingTransaction" = "There was an error while processing your transaction";

/* Error swap message on Failure screen */
"Swap.FailureSwapMessage" = "Please try swapping again or come back later.";

/* Popup button got it */
"Swap.GotItButton" = "Got it!";

/* Swap and Buy I want label from currency */
"Swap.iWant" = "I want";

/* Mining network fee label in swap details screen */
"Swap.MiningNetworkFee" = "Mining network fee";

"Swap.MiningNetworkFee.android" = "Mining network fee:";

/* Not a valid pair */
"Swap.NotValidPair" = "Not a valid pair";

/* Paid with label in swap details screen */
"Swap.PaidWith" = "Paid with";

/* Rate label in swap screen */
"Swap.RateValue" = "Rate";

/* Receiving network fee text label on Swap screen */
"Swap.ReceiveNetworkFee" = "Receiving network fee\n(included)";

/* Receiving fee label on Swap screen */
"Swap.ReceivingFee" = "Receiving fee\n";

"Swap.RequestTimedOut" = "Your swap request timed out. Please try again.";

"Swap.retry" = "Retry";

/* Select assets title in swap flow */
"Swap.SelectAssets" = "Select assets";

/* Sending fee label on swap screen */
"Swap.SendingFee" = "Sending fee\n";

/* Sending network fee text label on Swap screen */
"Swap.SendNetworkFee" = "Sending network fee\n(included)";

/* Send network fee not included label on swap */
"Swap.sendNetworkFeeNotIncluded" = "Sending network fee\n(not included)";

/* Swap again button title in swap failure screen */
"Swap.SwapAgain" = "Swap again";

/* Swap min and max limit text */
"Swap.SwapLimits" = "Currently, minimum limit for swap is $%@ USD and maximum limit is $%@ USD/day.";

"Swap.Swapping" = "Swapping %1$@/%2$@";

/* Swap status message on swap flow */
"Swap.SwapStatus" = "Your %@ is estimated to arrive in 30 minutes. You can continue to use your wallet. We'll let you know when your swap has finished.";

"Swap.temporarilyUnavailable" = "Swap is temporarily unavailable";

/* Timestamp label in swap details screen */
"Swap.Timestamp" = "Timestamp";

/* Total label in swap details screen */
"Swap.Total" = "Total:";

"Swap.transactionFrom" = "From %1$@";

/* Transaction ID label in swap details screen */
"Swap.TransactionID" = "RockWallet Transaction ID";

"Swap.transactionInEthereumNetwork" = "It seems that your transaction takes place in the Ethereum network, please keep in mind that network fees will be charged in ETH";

"Swap.transactionTo" = "To %1$@";

"Swap.youReceive" = "You receive";

"Swap.youSend" = "You send";

"Symbols.lock" = "\u{1F512}";

"Symbols.narrowSpace" = "\u{2009}";

/* Syncing view done syncing state header text */
"SyncingView.activity" = "Activity";

/* Syncing view connectiong state header text */
"SyncingView.connecting" = "Connecting";

/* The sync has failed (to complete) */
"SyncingView.failed" = "Sync Failed";

/* Syncing view header text */
"SyncingView.header" = "Syncing";

/* Retry button label */
"SyncingView.retry" = "Retry";

/* "eg. Synced through <Jan 12, 2015> */
"SyncingView.syncedThrough" = "Synced through %1$@";

/* Syncing view syncing state header text */
"SyncingView.syncing" = "Syncing";

/* 6 d (6 days) */
"TimeSince.days" = "%1$@ d";

/* 6 h (6 hours) */
"TimeSince.hours" = "%1$@ h";

/* 6 m (6 minutes) */
"TimeSince.minutes" = "%1$@ m";

/* 6 s (6 seconds) */
"TimeSince.seconds" = "%1$@ s";

/* Search assets */
"Title.searchAssets" = "Search assets";

/* Add [this item to the list] */
"TokenList.add" = "Add";

/* Add Wallets  [to your home screen] */
"TokenList.addTitle" = "Add Assets";

/* Hide [this token from view] */
"TokenList.hide" = "Hide";

/* [click here to] Manage [your] Wallets */
"TokenList.manageTitle" = "Manage Assets";

/* Remove [this item from the list] */
"TokenList.remove" = "Remove";

/* Show [this item on your home screen] */
"TokenList.show" = "Show";

/* You can customize your Touch ID Spending Limit from the [TouchIdSettings.linkText gets added here as a button] */
"TouchIdSettings.customizeText" = "You can customize your Touch ID spending limit from the %1$@.";

/* Fingerprint enabling description body */
"TouchIdSettings.customizeText.android" = "You can customize your Fingerprint Authentication Spending Limit from the Fingerprint Authorization Spending Limit screen";

/* Instruction for the fingerprint setup */
"TouchIdSettings.disabledWarning.body.android" = "You have not enabled fingerprint authentication on this device. Go to Settings -> Security to set up fingerprint authentication.";

/* Fingerprint Is Not Setup */
"TouchIdSettings.disabledWarning.title.android" = "Fingerprint Authentication Not Enabled";

/* Text that describes the purpose of the Touch ID settings in the BRD app. */
"TouchIdSettings.explanatoryText" = "Use Touch ID to unlock your RockWallet app and send money.";

/* Touch Id screen label */
"TouchIdSettings.label" = "Use your fingerprint to unlock your RockWallet and send money up to a set limit.";

/* Link Text (see TouchIdSettings.customizeText) */
"TouchIdSettings.linkText" = "Touch ID Spending Limit Screen";

/* Spending Limit: b100,000 ($100) */
"TouchIdSettings.spendingLimit" = "Spending limit: %1$@ (%2$@)";

/* Touch id switch label. */
"TouchIdSettings.switchLabel" = "Enable Touch ID for RockWallet";

/* Enable fingerprint for this wallet called Bread */
"TouchIdSettings.switchLabel.android" = "Enable Fingerprint Authentication";

/* Touch ID settings view title */
"TouchIdSettings.title" = "Touch ID";

/* Fingerprint authentication label */
"TouchIdSettings.title.android" = "Fingerprint Authentication";

/* Text label for a toggle that enables Touch ID for sending money. */
"TouchIdSettings.transactionsTitleText" = "Enable Touch ID to send money";

/* Touch ID unavailable alert message */
"TouchIdSettings.unavailableAlertMessage" = "You have not set up Touch ID on this device. Go to Settings->Touch ID & Passcode to set it up now.";

/* Touch ID unavailable alert title */
"TouchIdSettings.unavailableAlertTitle" = "Touch ID Not Set Up";

/* Text label for the toggle that enables Touch ID for unlocking the BRD app. */
"TouchIdSettings.unlockTitleText" = "Enable Touch ID to unlock RockWallet";

/* Always require passcode option */
"TouchIdSpendingLimit" = "Always require passcode";

/* Touch ID spending limit screen body */
"TouchIdSpendingLimit.body" = "You will be asked to enter your 6-digit PIN to send any transaction over your spending limit, and every 48 hours since the last time you entered your 6-digit PIN.";

/* Touch Id spending limit screen title */
"TouchIdSpendingLimit.title" = "Touch ID Spending Limit";

/* name of spending limit when using fingerprint authorization */
"TouchIdSpendingLimit.title.android" = "Fingerprint Authorization Spending Limit";

/* Availability status text */
"Transaction.available" = "Available to Spend";

/* Transaction complete label */
"Transaction.complete" = "Complete";

/* Transaction is confirming status text */
"Transaction.confirming" = "In Progress";

/* eg. Ending balance: $50.00 */
"Transaction.ending" = "Ending balance: %1$@";

/* Exchange rate on date header */
"Transaction.exchangeOnDayReceived" = "Exchange rate when received:";

/* Exchange rate on date header */
"Transaction.exchangeOnDaySent" = "Exchange rate when sent:";

/* Transaction failed status text */
"Transaction.failed" = "Failed";

/* Failed swap label in transaction view */
"Transaction.FailedSwap" = "Failed swap";

/* (b600 fee) */
"Transaction.fee" = "(%1$@ fee)";

/* Invalid transaction */
"Transaction.invalid" = "INVALID";

/* Timestamp label for event that just happened */
"Transaction.justNow" = "just now";

"Transaction.ManuallySettled" = "Manually settled";

/* Transaction is pending status text */
"Transaction.pending" = "Pending";

/* Pending purchase label in transaction view */
"Transaction.PendingPurchase" = "Pending purchase";

/* Pending swap label in transaction view */
"Transaction.PendingSwap" = "Pending swap";

/* Purchased label in transaction view */
"Transaction.Purchased" = "Purchased";

/* Purchase failed label in transaction view */
"Transaction.PurchaseFailed" = "Purchase failed";

/* Receive status text: 'In progress: 20%' */
"Transaction.receivedStatus" = "In progress: %1$@";

"Transaction.refunded" = "Refunded";

/* Send status text: 'In progress: 20%' */
"Transaction.sendingStatus" = "In progress: %1$@";

/* sending to <address> */
"Transaction.sendingTo" = "sending to %1$@";

/* sent to <address> */
"Transaction.sentTo" = "sent to %1$@";

"Transaction.stakingTo" = "staking to %1$@";

/* eg. Starting balance: $50.00 */
"Transaction.starting" = "Starting balance: %1$@";

"Transaction.swapFromFailed" = "Swap from %@ failed";

/* Swapped transaction label */
"Transaction.Swapped" = "Swapped";

"Transaction.swappedFrom" = "Swapped from %@";

"Transaction.swappedTo" = "Swapped to %@";

"Transaction.swappingFrom" = "Swapping from %@";

"Transaction.swappingTo" = "Swapping to %@";

"Transaction.swapToFailed" = "Swap to %@ failed";

/* e.g. "[The money you paid was a] Fee for token transfer: BRD" (BRD is the token that was transfered) */
"Transaction.tokenTransfer" = "Fee for token transfer: %1$@";

"Transaction.toRecipient" = "to %1$@";

/* Waiting to be confirmed string */
"Transaction.waiting" = "Waiting to be confirmed. Some merchants require confirmation to complete a transaction. Estimated time: 1-2 hours.";

/* e.g. I received money from an account. */
"TransactionDetails.account" = "account";

/* Address received from header */
"TransactionDetails.addressFromHeader" = "From";

/* Address sent to header */
"TransactionDetails.addressToHeader" = "To";

/* e.g. "(this was received) via (address #1)" via = by way of */
"TransactionDetails.addressViaHeader" = "From";

/* Amount section header */
"TransactionDetails.amountHeader" = "Amount";

/* "(it was worth) $100 when sent, (and it is worth) $200 now" */
"TransactionDetails.amountWhenReceived" = "%1$@ when received, %2$@ now";

/* "(it was worth) $100 when sent, (and it is worth) $200 now" */
"TransactionDetails.amountWhenSent" = "%1$@ when sent, %2$@ now";

/* Block height label */
"TransactionDetails.blockHeightLabel" = "Confirmed in Block";

/* Memo section header */
"TransactionDetails.commentsHeader" = "Memo";

/* Memo field placeholder */
"TransactionDetails.commentsPlaceholder" = "Add memo...";

/* Timestamp section header for complete tx */
"TransactionDetails.completeTimestampHeader" = "Complete";

/* Block height and confirmations label, eg. 182930 (45061 confirmations) */
"TransactionDetails.confirmationsLabel" = "Confirmations";

"TransactionDetails.destinationTag" = "Destination Tag";

"TransactionDetails.destinationTag_EmptyHint" = "(empty)";

/* Empty transaction list message. */
"TransactionDetails.emptyMessage" = "Your transactions will appear here.";

/* e.g. the users balance after the transaction was compeleted */
"TransactionDetails.endingBalanceHeader" = "Ending Balance";

/* Exchange rate section header */
"TransactionDetails.exchangeRateHeader" = "Exchange Rate";

/* Tx detail field header */
"TransactionDetails.feeHeader" = "Total Fee";

/* "Received [$5] at [which of my addresses]" => This is the "at [which of my addresses]" part. */
"TransactionDetails.from" = "at %1$@";

/* Tx detail field header */
"TransactionDetails.gasLimitHeader" = "Gas Limit";

/* Tx detail field header */
"TransactionDetails.gasPriceHeader" = "Gas Price";

"TransactionDetails.gift" = "Gift";

"TransactionDetails.giftedTo" = "Gifted to %1$@";

/* Label for Hedera Memo field on transaction details screen */
"TransactionDetails.hederaMemo" = "Hedera Memo";

/* Hide Details button */
"TransactionDetails.hideDetails" = "Hide Details";

/* Label showing the transaction was started (initialized) */
"TransactionDetails.initializedTimestampHeader" = "Initialized";

/* More button title */
"TransactionDetails.more" = "More...";

/* Moved $5.00 (as in "I moved $5 to another location") */
"TransactionDetails.moved" = "Moved %1$@";

/* Moved $5.00 */
"TransactionDetails.movedAmountDescription" = "Moved <b>%1$@</b>";

/* eg. Confirmed in Block: Not Confirmed */
"TransactionDetails.notConfirmedBlockHeightLabel" = "Not Confirmed";

/* "Received [$5] at [which of my addresses]" => This is the "Received [$5]" part. */
"TransactionDetails.received" = "Received %1$@";

/* Received $5.00 */
"TransactionDetails.receivedAmountDescription" = "Received <b>%1$@</b>";

/* received from <address> */
"TransactionDetails.receivedFrom" = "received from %1$@";

/* received via <address> */
"TransactionDetails.receivedVia" = "received via %1$@";

/* receiving from <address> */
"TransactionDetails.receivingFrom" = "receiving from %1$@";

/* receiving via <address> */
"TransactionDetails.receivingVia" = "receiving via %1$@";

"TransactionDetails.reclaim" = "Reclaim";

"TransactionDetails.resend" = "Resend";

/* "Sent [$5] to [address]" => This is the "Sent [$5]" part. */
"TransactionDetails.sent" = "Sent %1$@";

/* Sent $5.00 */
"TransactionDetails.sentAmountDescription" = "Sent <b>%1$@</b>";

/* Show Details button */
"TransactionDetails.showDetails" = "Show Details";

/* The balance the user started with before the transaction completed */
"TransactionDetails.startingBalanceHeader" = "Starting Balance";

/* Status section header */
"TransactionDetails.statusHeader" = "Status";

/* Transaction Details Title */
"TransactionDetails.title" = "Transaction Details";

/* Transaction Details Title - Failed */
"TransactionDetails.titleFailed" = "Failed";

/* Transaction Details Title - Internal */
"TransactionDetails.titleInternal" = "Internal";

/* Transaction Details Title - Received */
"TransactionDetails.titleReceived" = "Received";

/* Transaction Details Title - Receiving */
"TransactionDetails.titleReceiving" = "Receiving";

/* Transaction Details Title - Sending */
"TransactionDetails.titleSending" = "Sending";

/* Transaction Details Title - Sent */
"TransactionDetails.titleSent" = "Sent";

/* "Sent [$5] to [address]" => This is the "to [address]" part. */
"TransactionDetails.to" = "to %1$@";

/* Tx detail field header */
"TransactionDetails.totalHeader" = "Total";

/* Transaction ID header */
"TransactionDetails.txHashHeader" = "Transaction ID";

/* (this transaction was) Received at this address: */
"TransactionDirection.address" = "Received at this Address";

/* (this transaction was) Sent to this address: */
"TransactionDirection.to" = "Sent to this Address";

"UDomains.invalid" = "Invalid address.";

/* Disabled until date */
"UnlockScreen.disabled" = "Disabled until: %1$@";

/* Unlock with FaceID accessibility label */
"UnlockScreen.faceIdText" = "Unlock with FaceID";

/* My Address button title */
"UnlockScreen.myAddress" = "My Address";

/* Reset PIN with Paper Key button label. */
"UnlockScreen.resetPin" = "Reset your PIN";

/* Scan button title */
"UnlockScreen.scan" = "Scan";

/* Instruction to touch the sensor for fingerprint authentication */
"UnlockScreen.touchIdInstructions.android" = "Touch Sensor";

/* TouchID prompt text */
"UnlockScreen.touchIdPrompt" = "Unlock your RockWallet.";

/* Device authentication body */
"UnlockScreen.touchIdPrompt.android" = "Please unlock your Android device to continue.";

/* Unlock with TouchID accessibility label */
"UnlockScreen.touchIdText" = "Unlock with TouchID";

/* Device authentication title */
"UnlockScreen.touchIdTitle.android" = "Authentication required";

/* Wallet disabled header */
"UnlockScreen.walletDisabled" = "Wallet disabled";

/* Wallet disabled description */
"UnlockScreen.walletDisabledDescription" = "You will need your recovery phrases to reset PIN.";

/* Wipe wallet prompt */
"UnlockScreen.wipePrompt" = "Are you sure you would like to wipe this wallet?";

/* Update PIN caption text */
"UpdatePin.caption" = "Remember this PIN. If you forget it, you won't be able to access your assets.";

/* Contact Support button on update pin view */
"UpdatePin.ContactSupport" = "Contact Support";

/* PIN creation info. */
"UpdatePin.createInstruction" = "Your PIN will be used to unlock your wallet";

/* Update PIN title */
"UpdatePin.createTitle" = "Set PIN";

/* Update PIN title */
"UpdatePin.createTitleConfirm" = "Confirm your new PIN";

/* Disabled until text on disabled wallet view */
"UpdatePin.DisabledUntil" = "Disabled until:";

/* Enter current PIN instruction */
"UpdatePin.enterCurrent" = "Enter your current PIN.";

/* Enter new PIN instruction */
"UpdatePin.enterNew" = "Enter your new PIN.";

/* Enter your PIN label to finish the transaction */
"UpdatePin.EnterPin" = "Please enter your PIN to confirm the transaction";

/* Enter PIN instruction */
"UpdatePin.enterYourPin" = "Enter your PIN";

/* Incorrect PIN popup message */
"UpdatePin.IncorrectPin" = "Incorrect PIN. The wallet will get disabled for 6 minutes after";

/* Number of attempts left on pin entry screen */
"UpdatePin.OneAttempt" = "1 more failed attempt.";

/* Re-Enter new PIN instruction */
"UpdatePin.reEnterNew" = "Re-Enter your new PIN.";

/* Attempts remaining on pin entry screen */
"UpdatePin.RemainingAttempts" = "Attempts remaining:";

/* Your PIN was reset successfully message */
"UpdatePin.ResetPinSuccess" = "Your PIN was reset successfully!";

/* Enter PIN header */
"UpdatePin.securedWallet" = "Secured wallet";

/* Update PIN title */
"UpdatePin.setNewPinTitle" = "Set your PIN";

/* Update PIN failure error message. */
"UpdatePin.setPinError" = "Sorry, could not update PIN.";

/* Update PIN failure alert view title */
"UpdatePin.setPinErrorTitle" = "Update PIN Error";

/* Number of attempts left on pin entry screen */
"UpdatePin.TwoAttempts" = "2 more failed attempts.";

/* Update pin popup explanation when pressing "?" button */
"UpdatePin.UpdatePinPopup" = "The RockWallet Wallet app requires you to set a PIN to secure your wallet, separate from your device passcode.  \n\nYou will be required to enter the PIN to view your balance or send money, which keeps your wallet private even if you let someone use your phone or if your phone is stolen by someone who knows your device passcode.\n            \nDo not forget your wallet PIN! It can only be reset by using your Recovery Phrase. If you forget your PIN and lose your Recovery Phrase, your wallet will be lost.";

/* Update PIN title */
"UpdatePin.updateTitle" = "Update PIN";

/* Why do I need a PIN title explanation popup */
"UpdatePin.WhyPIN" = "Why do I need a PIN?";

/* Authorize to copy wallet addresses alert message */
"URLHandling.addressaddressListAlertMessage" = "Copy wallet addresses to clipboard?";

/* Authorize to copy wallet address PIN view prompt. */
"URLHandling.addressList" = "Authorize to copy wallet address to clipboard";

/* Authorize to copy wallet address alert title */
"URLHandling.addressListAlertTitle" = "Copy Wallet Addresses";

/* Copy wallet addresses alert button label */
"URLHandling.copy" = "Copy";

/* Verification Code Action Instructions */
"VerificationCode.actionInstructions" = "Check your phone for the confirmation token we sent you. It may take a couple of minutes.";

/* Verification Code Label */
"VerificationCode.actionLabel" = "Enter token";

/* Verification Code Confirm Button */
"VerificationCode.buttonConfirm" = "Confirm";

/* Verification Code Label */
"VerificationCode.label" = "We Texted You a Confirmation Code";

/* Verification Code Title */
"VerificationCode.title" = "Confirmation Code";

"VerifyAccount.Button" = "Verify your account";

/* Verify PIN for transaction view body */
"VerifyPin.authorize" = "Please enter your PIN to authorize this transaction.";

/* Verify PIN view body */
"VerifyPin.continueBody" = "Please enter your PIN to continue.";

/* Verify PIN view title */
"VerifyPin.title" = "PIN Required";

/* Authorize transaction with touch id message */
"VerifyPin.touchIdMessage" = "Authorize this transaction";

/* Find assets button on add wallets screen */
"Wallet.FindAssets" = "Trouble finding assets?";

/* Limited assets title in add wallets popup */
"Wallet.LimitedAssets" = "Limited assets";

/* Limited assets message in add wallets popup */
"Wallet.LimitedAssetsMessage" = "We currently only support the assets that are listed here. You cannot access other assets through this wallet at the moment.";

"Wallet.one_day" = "1d";

"Wallet.one_month" = "1m";

"Wallet.one_week" = "1w";

"Wallet.one_year" = "1y";

"Wallet.stakingTitle" = "Staking";

"Wallet.three_months" = "3m";

"Wallet.three_years" = "3y";

/* Turn off fast sync confirmation question */
"WalletConnectionSettings.confirmation" = "Are you sure you want to turn off Fastsync?";

/* Explanation for wallet connection setting */
"WalletConnectionSettings.explanatoryText" = "Make syncing your bitcoin wallet practically instant. Learn more about how it works here.";

/* Connection mode switch label. */
"WalletConnectionSettings.footerTitle" = "Powered by";

/* Wallet connection settings view title */
"WalletConnectionSettings.header" = "Fastsync (pilot)";

/* Link text in explanatoryText This NB: This should exactly match the last word of WalletConnectionSettings.explanatoryText */
"WalletConnectionSettings.link" = "here";

/* WalletConnectionSettiongs, Wallet connection settings menu item title. */
"WalletConnectionSettings.menuTitle" = "Connection Mode";

/* Turn off fast sync button label */
"WalletConnectionSettings.turnOff" = "Turn Off";

/* Wallet connection settings view title */
"WalletConnectionSettings.viewTitle" = "Fastsync";

/* 'No wallet' warning for watch app */
"Watch.noWalletWarning" = "Open the RockWallet iPhone app to set up your wallet.";

/* Dismiss button label */
"Webview.dismiss" = "Dismiss";

/* Webview loading error message */
"Webview.errorMessage" = "There was an error loading the content. Please try again.";

/* Updating webview message */
"Webview.updating" = "Updating...";

/* Welcome screen text. (?) will be replaced with the help icon users should look for. */
"Welcome.body" = "Breadwallet has changed its name to RockWallet, with a brand new look and some new features.\n\nIf you need help, look for the (?) in the top right of most screens.";

/* Top title of welcome screen */
"Welcome.title" = "Welcome to RockWallet!";

/* Single asset widget description */
"Widget.assetDescription" = "Stay up to date with your favorite crypto asset";

/* Asset list widget description */
"Widget.assetListDescription" = "Stay up to date with your favorite crypto assets";

/* Asset list widget title */
"Widget.assetListTitle" = "Asset list";

/* Single asset widget title */
"Widget.assetTitle" = "Asset";

/* Name of color based on os theme light/dark */
"Widget.Color.autoLightDark" = "System Auto Light / Dark";

/* Name of color - Black */
"Widget.Color.black" = "Black";

/* Name of color - Blue */
"Widget.Color.blue" = "Blue";

/* Name of color - Gray */
"Widget.Color.gray" = "Gray";

/* Name of color - Green */
"Widget.Color.green" = "Green";

/* Name of color - Orange */
"Widget.Color.orange" = "Orange";

/* Name of color - Pink */
"Widget.Color.pink" = "Pink";

/* Name of color - Primary Background */
"Widget.Color.primaryBackground" = "Primary";

/* Name of color - Primary Text */
"Widget.Color.primaryText" = "Primary";

/* Name of color - Purple */
"Widget.Color.purple" = "Purple";

/* Name of color - Red */
"Widget.Color.red" = "Red";

/* Name of color - Secondary Background */
"Widget.Color.secondaryBackground" = "Secondary";

/* Name of color - Secondary Text */
"Widget.Color.secondaryText" = "Secondary";

/* Name of color - Tertiary Background */
"Widget.Color.tertiaryBackground" = "Tertiary";

/* Name of color - Tertiary Text */
"Widget.Color.tertiaryText" = "Tertiary";

/* Name of color - White */
"Widget.Color.white" = "White";

/* Name of color - Yellow */
"Widget.Color.yellow" = "Yellow";

/* Title of color grouping in widget color picker */
"Widget.colorSectionBackground" = "Theme Background Colors";

/* Title of color grouping in widget color picker */
"Widget.colorSectionBasic" = "Basic Colors";

/* Title of color grouping in widget color picker */
"Widget.colorSectionCurrency" = "Currency Colors";

/* Title of color grouping in widget color picker */
"Widget.colorSectionSystem" = "System Colors";

/* Title of color grouping in widget color picker */
"Widget.colorSectionText" = "Theme Text Colors";

/* Portfolio widget description if data sharing is disabled */
"Widget.enablePortfolio" = "Enable in app\npreferences";

/* Portfolio description */
"Widget.portfolioDescription" = "Stay up to date with your portfolio";

/* Portfolio widget description if data sharing is enabled */
"Widget.portfolioSummary" = "Portfolio\nSummary";

/* Portfolio widget title */
"Widget.portfolioTitle" = "Portfolio";

/* Wipe wallet alert message */
"WipeWallet.alertMessage" = "Are you sure you want to unlink this wallet from this device?";

/* Wipe wallet alert title */
"WipeWallet.alertTitle" = "Unlink Wallet?";

/* Failed wipe wallet alert message */
"WipeWallet.failedMessage" = "Failed to wipe wallet.";

/* Failed wipe wallet alert title */
"WipeWallet.failedTitle" = "Failed";

/* Enter phrase to wipe wallet instruction. (Important to explain it is the CURRENT [this wallet's] paper key that needs to be entered). */
"WipeWallet.instruction" = "Please enter your recovery phrase to wipe this wallet from your device.";

/* Instructions for unlinking the wallet */
"WipeWallet.startMessage" = "Starting or recovering another wallet allows you to access and manage a different RockWallet wallet on this device.";

/* Start wipe wallet view warning */
"WipeWallet.startWarning" = "Your current wallet will be removed from this device. If you wish to restore it in the future, you will need to enter your Recovery Phrase.";

/* Unlink this wallet from this device. */
"WipeWallet.title" = "Start or Recover Another Wallet";

/* Wipe wallet button title */
"WipeWallet.wipe" = "Wipe";

/* Wiping activity message */
"WipeWallet.wiping" = "Wiping...";

/* Paper key instructions. */
"WritePaperPhrase.instruction" = "Write down the following words in order";

/* button label */
"WritePaperPhrase.next" = "Next";

/* button label */
"WritePaperPhrase.previous" = "Previous";

/* 1 of 3 */
"WritePaperPhrase.step" = "%1$d of %2$d";

"WritePaperPhrase.warning" = "For security purposes, do not screenshot or email these words.";

"WritePaperPhrase.warning2" = "Remember to write these words down. Swipe back if you forgot.";

